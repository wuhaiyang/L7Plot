{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/choropleth/administrative","result":{"data":{"site":{"siteMetadata":{"title":"L7Plot","galleryMenuCloseAll":false,"examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"常用案例","en":"Show Case"}},{"slug":"dot","icon":"point","title":{"zh":"散点图","en":"Dot"}},{"slug":"heat","icon":"heatmap","title":{"zh":"热力图","en":"Heat"}},{"slug":"path","icon":"line","title":{"zh":"路径图","en":"path"}},{"slug":"flow","icon":"line","title":{"zh":"流向图","en":"flow"}},{"slug":"area","icon":"polygon","title":{"zh":"区域图","en":"area"}},{"slug":"choropleth","icon":"polygon","title":{"zh":"行政区域图","en":"choropleth"}},{"slug":"advanced-plot","icon":"other","title":{"zh":"高级图表","en":"advanced-plot"}}],"playground":{"container":"<div id=\"container\" style=\"position: relative; width: 100%; height: 100vh;\" />","playgroundDidMount":"console.log(\"playgroundDidMount\");","playgroundWillUnmount":"console.log(\"playgroundWillUnmount\");","dependencies":null,"devDependencies":{"typescript":"latest"},"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有地图","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/advanced-plot/muti-layers"},"frontmatter":{"title":"Muti Layers","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-layers/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced-plot/muti-layers"},"frontmatter":{"title":"多图层","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-layers/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/division"},"frontmatter":{"title":"Division Fill","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/division/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/division"},"frontmatter":{"title":"区域填充","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/division/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/choropleth/administrative"},"frontmatter":{"title":"Administrative Division","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/administrative/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/choropleth/administrative"},"frontmatter":{"title":"行政区域","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/administrative/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/bobble"},"frontmatter":{"title":"Bubble Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"dot/bobble/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/bobble"},"frontmatter":{"title":"气泡图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"dot/bobble/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/scatter"},"frontmatter":{"title":"Scatter","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"dot/scatter/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/scatter"},"frontmatter":{"title":"散点图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"dot/scatter/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/flow/flow"},"frontmatter":{"title":"Flow Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"flow/flow/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/flow/flow"},"frontmatter":{"title":"流向图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"flow/flow/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/distribution"},"frontmatter":{"title":"Spatial distribution","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/distribution/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/distribution"},"frontmatter":{"title":"空间分布","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/distribution/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/heat/heatmap"},"frontmatter":{"title":"点热力图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heat/heatmap/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heat/heatmap"},"frontmatter":{"title":"Heatmap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heat/heatmap/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/path/path"},"frontmatter":{"title":"Path Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"path/path/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/path/path"},"frontmatter":{"title":"路径图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"path/path/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/advanced-plot/muti-plots"},"frontmatter":{"title":"Muti Plots","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-plots/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced-plot/muti-plots"},"frontmatter":{"title":"多图表","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-plots/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/interactive"},"frontmatter":{"title":"Map Interaction","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/interactive/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/interactive"},"frontmatter":{"title":"区域交互","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/interactive/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/choropleth/drill"},"frontmatter":{"title":"Drill down","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/drill/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/choropleth/drill"},"frontmatter":{"title":"区域钻取","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/drill/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/dot-density"},"frontmatter":{"title":"Dot Density","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"dot/dot-density/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/dot-density"},"frontmatter":{"title":"点密度图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"dot/dot-density/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/icon"},"frontmatter":{"title":"Icon Map","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"dot/icon/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/icon"},"frontmatter":{"title":"图标图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"dot/icon/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heat/grid"},"frontmatter":{"title":"Grid","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heat/grid/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heat/grid"},"frontmatter":{"title":"网格聚合图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heat/grid/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heat/hexbin"},"frontmatter":{"title":"Hexbin","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"heat/hexbin/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heat/hexbin"},"frontmatter":{"title":"蜂窝聚合图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"heat/hexbin/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/advanced-plot/muti-layers/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-layers/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced-plot/muti-layers/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-layers/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/advanced-plot/muti-plots/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-plots/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/advanced-plot/muti-plots/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"advanced-plot/muti-plots/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/division/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"area/division/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/division/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"area/division/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/interactive/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"area/interactive/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/interactive/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"area/interactive/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/choropleth/administrative/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/administrative/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/choropleth/administrative/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/administrative/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/choropleth/drill/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/drill/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/choropleth/drill/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"choropleth/drill/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/bobble/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/bobble/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/bobble/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/bobble/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/dot-density/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/dot-density/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/dot-density/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/dot-density/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/icon/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/icon/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/icon/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/icon/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/dot/scatter/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/scatter/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/dot/scatter/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"dot/scatter/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/flow/flow/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"flow/flow/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/flow/flow/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"flow/flow/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/distribution/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/distribution/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/distribution/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/distribution/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heat/grid/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heat/grid/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heat/grid/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heat/grid/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heat/heatmap/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heat/heatmap/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heat/heatmap/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heat/heatmap/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heat/hexbin/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heat/hexbin/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heat/hexbin/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"heat/hexbin/API.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/path/path/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"path/path/API.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/path/path/API"},"frontmatter":{"title":"","order":null,"icon":null},"parent":{"__typename":"File","relativePath":"path/path/API.zh.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"advanced-plot/muti-layers/demo/air-fly.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/advanced-plot/muti-layers/demo/air-fly.ts","order":1,"filename":"air-fly.ts","title":{"zh":"航向图","en":"Air fly map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/5%266ER7Qzw%26/6510f8b9-6384-4b43-8fae-b473b2f18b15.png","source":"import { L7Plot, registerImage } from '@antv/l7plot';\n\nregisterImage('plane', 'https://gw.alipayobjects.com/zos/bmw-prod/0ca1668e-38c2-4010-8568-b57cb33839b9.svg');\n\nPromise.all([\n  fetch('https://gw.alipayobjects.com/os/basement_prod/dbd008f1-9189-461c-88aa-569357ffc07d.json').then((data) =>\n    data.json()\n  ),\n  fetch('https://gw.alipayobjects.com/os/antfincdn/i%26CI%24gcnA8/dot.json').then((data) => data.json()),\n  fetch('https://gw.alipayobjects.com/os/antfincdn/iP4LUS9o0t/flyline.json').then((data) => data.json()),\n]).then(([world, dotData, flydata]) => {\n  new L7Plot('container', {\n    map: {\n      type: 'mapbox',\n      style: 'dark',\n      pitch: 35,\n      center: [3.438, 40.16797],\n      zoom: 0.51329,\n    },\n    layers: [\n      {\n        name: 'worldLine',\n        type: 'pathLayer',\n        source: {\n          data: world,\n        },\n        color: '#41fc9d',\n        size: 0.5,\n        style: {\n          opacity: 0.4,\n        },\n      },\n      {\n        name: 'dotPoint',\n        type: 'dotLayer',\n        source: {\n          data: dotData,\n          parser: {\n            type: 'json',\n            x: 'lng',\n            y: 'lat',\n          },\n        },\n        color: '#ffed11',\n        size: 40,\n        style: {\n          opacity: 1,\n        },\n        animate: {\n          speed: 0.8,\n        },\n      },\n      {\n        name: 'flyLine',\n        type: 'arcLayer',\n        source: {\n          data: flydata,\n          parser: {\n            type: 'json',\n            coordinates: 'coord',\n          },\n        },\n        shape: 'arc3d',\n        color: '#ff6b34',\n        size: 1,\n        style: {\n          lineType: 'dash',\n          dashArray: [5, 5],\n          opacity: 0.5,\n        },\n        state: { active: true },\n      },\n      {\n        name: 'airfly',\n        type: 'arcLayer',\n        source: {\n          data: flydata,\n          parser: {\n            type: 'json',\n            coordinates: 'coord',\n          },\n        },\n        shape: 'arc3d',\n        color: '#ff6b34',\n        size: 20,\n        texture: 'plane',\n        style: {\n          textureBlend: 'replace',\n          lineTexture: true, // 开启线的贴图功能\n          iconStep: 10, // 设置贴图纹理的间距\n          opacity: 1,\n        },\n        state: { active: true },\n        animate: {\n          duration: 10,\n          interval: 0.2,\n          trailLength: 0.05,\n        },\n      },\n    ],\n    zoom: {\n      position: 'bottomright',\n    },\n  });\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.airFly = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  (0, _l7plot.registerImage)('plane', 'https://gw.alipayobjects.com/zos/bmw-prod/0ca1668e-38c2-4010-8568-b57cb33839b9.svg');\n  Promise.all([fetch('https://gw.alipayobjects.com/os/basement_prod/dbd008f1-9189-461c-88aa-569357ffc07d.json').then(function (data) {\n    return data.json();\n  }), fetch('https://gw.alipayobjects.com/os/antfincdn/i%26CI%24gcnA8/dot.json').then(function (data) {\n    return data.json();\n  }), fetch('https://gw.alipayobjects.com/os/antfincdn/iP4LUS9o0t/flyline.json').then(function (data) {\n    return data.json();\n  })]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 3),\n        world = _ref2[0],\n        dotData = _ref2[1],\n        flydata = _ref2[2];\n\n    new _l7plot.L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 35,\n        center: [3.438, 40.16797],\n        zoom: 0.51329\n      },\n      layers: [{\n        name: 'worldLine',\n        type: 'pathLayer',\n        source: {\n          data: world\n        },\n        color: '#41fc9d',\n        size: 0.5,\n        style: {\n          opacity: 0.4\n        }\n      }, {\n        name: 'dotPoint',\n        type: 'dotLayer',\n        source: {\n          data: dotData,\n          parser: {\n            type: 'json',\n            x: 'lng',\n            y: 'lat'\n          }\n        },\n        color: '#ffed11',\n        size: 40,\n        style: {\n          opacity: 1\n        },\n        animate: {\n          speed: 0.8\n        }\n      }, {\n        name: 'flyLine',\n        type: 'arcLayer',\n        source: {\n          data: flydata,\n          parser: {\n            type: 'json',\n            coordinates: 'coord'\n          }\n        },\n        shape: 'arc3d',\n        color: '#ff6b34',\n        size: 1,\n        style: {\n          lineType: 'dash',\n          dashArray: [5, 5],\n          opacity: 0.5\n        },\n        state: {\n          active: true\n        }\n      }, {\n        name: 'airfly',\n        type: 'arcLayer',\n        source: {\n          data: flydata,\n          parser: {\n            type: 'json',\n            coordinates: 'coord'\n          }\n        },\n        shape: 'arc3d',\n        color: '#ff6b34',\n        size: 20,\n        texture: 'plane',\n        style: {\n          textureBlend: 'replace',\n          lineTexture: true,\n          // 开启线的贴图功能\n          iconStep: 10,\n          // 设置贴图纹理的间距\n          opacity: 1\n        },\n        state: {\n          active: true\n        },\n        animate: {\n          duration: 10,\n          interval: 0.2,\n          trailLength: 0.05\n        }\n      }],\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Muti Layers","order":800},"zh":{"title":"多图层","order":800}}},{"relativePath":"advanced-plot/muti-layers/demo/fly-flow.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/advanced-plot/muti-layers/demo/fly-flow.ts","order":0,"filename":"fly-flow.ts","title":{"zh":"飞线流向图","en":"Fly flow map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/FfjXy0yOng/a101f124-2b16-4e5e-98c3-f2b892ebef15.png","source":"import { L7Plot } from '@antv/l7plot';\n\nPromise.all([\n  fetch('https://gw.alipayobjects.com/os/basement_prod/dbd008f1-9189-461c-88aa-569357ffc07d.json').then((data) =>\n    data.json()\n  ),\n  fetch('https://gw.alipayobjects.com/os/antfincdn/i%26CI%24gcnA8/dot.json').then((data) => data.json()),\n  fetch('https://gw.alipayobjects.com/os/antfincdn/iP4LUS9o0t/flyline.json').then((data) => data.json()),\n]).then(([world, dotData, flydata]) => {\n  new L7Plot('container', {\n    map: {\n      type: 'mapbox',\n      style: 'dark',\n      pitch: 35,\n      center: [3.438, 40.16797],\n      zoom: 0.51329,\n    },\n    layers: [\n      {\n        name: 'worldLine',\n        type: 'pathLayer',\n        source: {\n          data: world,\n        },\n        color: '#41fc9d',\n        size: 0.5,\n        style: {\n          opacity: 0.4,\n        },\n      },\n      {\n        name: 'dotPoint',\n        type: 'dotLayer',\n        source: {\n          data: dotData,\n          parser: {\n            type: 'json',\n            x: 'lng',\n            y: 'lat',\n          },\n        },\n        color: '#ffed11',\n        size: 40,\n        style: {\n          opacity: 1,\n        },\n        animate: {\n          speed: 0.8,\n        },\n      },\n      {\n        name: 'flyLine',\n        type: 'arcLayer',\n        source: {\n          data: flydata,\n          parser: {\n            type: 'json',\n            coordinates: 'coord',\n          },\n        },\n        shape: 'arc3d',\n        color: '#ff6b34',\n        size: 2,\n        style: {\n          opacity: 1,\n        },\n        state: { active: true },\n        animate: {\n          interval: 2,\n          trailLength: 2,\n          duration: 1,\n        },\n      },\n    ],\n    zoom: {\n      position: 'bottomright',\n    },\n  });\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.flyFlow = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  Promise.all([fetch('https://gw.alipayobjects.com/os/basement_prod/dbd008f1-9189-461c-88aa-569357ffc07d.json').then(function (data) {\n    return data.json();\n  }), fetch('https://gw.alipayobjects.com/os/antfincdn/i%26CI%24gcnA8/dot.json').then(function (data) {\n    return data.json();\n  }), fetch('https://gw.alipayobjects.com/os/antfincdn/iP4LUS9o0t/flyline.json').then(function (data) {\n    return data.json();\n  })]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 3),\n        world = _ref2[0],\n        dotData = _ref2[1],\n        flydata = _ref2[2];\n\n    new _l7plot.L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 35,\n        center: [3.438, 40.16797],\n        zoom: 0.51329\n      },\n      layers: [{\n        name: 'worldLine',\n        type: 'pathLayer',\n        source: {\n          data: world\n        },\n        color: '#41fc9d',\n        size: 0.5,\n        style: {\n          opacity: 0.4\n        }\n      }, {\n        name: 'dotPoint',\n        type: 'dotLayer',\n        source: {\n          data: dotData,\n          parser: {\n            type: 'json',\n            x: 'lng',\n            y: 'lat'\n          }\n        },\n        color: '#ffed11',\n        size: 40,\n        style: {\n          opacity: 1\n        },\n        animate: {\n          speed: 0.8\n        }\n      }, {\n        name: 'flyLine',\n        type: 'arcLayer',\n        source: {\n          data: flydata,\n          parser: {\n            type: 'json',\n            coordinates: 'coord'\n          }\n        },\n        shape: 'arc3d',\n        color: '#ff6b34',\n        size: 2,\n        style: {\n          opacity: 1\n        },\n        state: {\n          active: true\n        },\n        animate: {\n          interval: 2,\n          trailLength: 2,\n          duration: 1\n        }\n      }],\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Muti Layers","order":800},"zh":{"title":"多图层","order":800}}},{"relativePath":"advanced-plot/muti-layers/demo/wind-field.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/advanced-plot/muti-layers/demo/wind-field.ts","order":2,"filename":"wind-field.ts","title":{"zh":"风场图","en":"Wind field map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/wuc%26qDZ5Ov/4b425019-66be-4ccc-84b9-c314ed6b3313.png","source":"import { L7Plot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/bmw-prod/7455fead-1dc0-458d-b91a-fb4cf99e701e.txt')\n  .then((response) => response.text())\n  .then((data) => {\n    new L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [60, 40.7128],\n        zoom: 2,\n      },\n      layers: [\n        {\n          type: 'arcLayer',\n          source: {\n            data: data,\n            parser: {\n              type: 'csv',\n              x: 'lng1',\n              y: 'lat1',\n              x1: 'lng2',\n              y1: 'lat2',\n            },\n          },\n          shape: 'arc',\n          size: 0.5,\n          color: '#6495ED',\n          style: {\n            opacity: 0.8,\n          },\n          animate: {\n            duration: 4,\n            interval: 0.2,\n            trailLength: 0.6,\n          },\n        },\n      ],\n      zoom: {\n        position: 'bottomright',\n      },\n      scale: {\n        position: 'bottomright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.windField = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/7455fead-1dc0-458d-b91a-fb4cf99e701e.txt').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    new _l7plot.L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [60, 40.7128],\n        zoom: 2\n      },\n      layers: [{\n        type: 'arcLayer',\n        source: {\n          data: data,\n          parser: {\n            type: 'csv',\n            x: 'lng1',\n            y: 'lat1',\n            x1: 'lng2',\n            y1: 'lat2'\n          }\n        },\n        shape: 'arc',\n        size: 0.5,\n        color: '#6495ED',\n        style: {\n          opacity: 0.8\n        },\n        animate: {\n          duration: 4,\n          interval: 0.2,\n          trailLength: 0.6\n        }\n      }],\n      zoom: {\n        position: 'bottomright'\n      },\n      scale: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Muti Layers","order":800},"zh":{"title":"多图层","order":800}}},{"relativePath":"advanced-plot/muti-plots/demo/china-bubble.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/advanced-plot/muti-plots/demo/china-bubble.ts","order":1,"filename":"china-bubble.ts","title":{"zh":"中国气泡图","en":"China bubble map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/JFbk%26oZuX6/712ac297-1c68-44ea-8f6c-274cb2484b48.png","source":"import { L7Plot } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'province')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    new L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      plots: [\n        {\n          type: 'choropleth',\n          zIndex: 1,\n          source: {\n            data: [],\n            joinBy: {\n              sourceField: 'code',\n              geoField: 'adcode',\n            },\n          },\n          viewLevel: {\n            level: 'country',\n            adcode: '100000',\n          },\n          autoFit: true,\n          color: '#ccc',\n          style: {\n            opacity: 1,\n            stroke: '#F2F7F7',\n            lineWidth: 0.6,\n            lineOpacity: 0.8,\n          },\n          label: {\n            visible: true,\n            field: 'name',\n            style: {\n              fill: '#000',\n              opacity: 0.8,\n              fontSize: 10,\n              stroke: '#f0f0f0',\n              strokeWidth: 2,\n              textAllowOverlap: false,\n              padding: [5, 5],\n              textOffset: [0, 40],\n            },\n          },\n        },\n        {\n          type: 'dot',\n          zIndex: 2,\n          source: {\n            data: data,\n            parser: { type: 'json', x: 'lng', y: 'lat' },\n          },\n          color: '#1AA9FF',\n          size: {\n            field: 'value',\n            value: ({ value }) => value / 200,\n          },\n          style: {\n            opacity: 1,\n            stroke: '#fff',\n            strokeWidth: 1,\n          },\n          tooltip: {\n            items: ['name', 'value'],\n          },\n        },\n      ],\n      layers: [],\n      zoom: {\n        position: 'bottomright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chinaBubble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'province';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      plots: [{\n        type: 'choropleth',\n        zIndex: 1,\n        source: {\n          data: [],\n          joinBy: {\n            sourceField: 'code',\n            geoField: 'adcode'\n          }\n        },\n        viewLevel: {\n          level: 'country',\n          adcode: '100000'\n        },\n        autoFit: true,\n        color: '#ccc',\n        style: {\n          opacity: 1,\n          stroke: '#F2F7F7',\n          lineWidth: 0.6,\n          lineOpacity: 0.8\n        },\n        label: {\n          visible: true,\n          field: 'name',\n          style: {\n            fill: '#000',\n            opacity: 0.8,\n            fontSize: 10,\n            stroke: '#f0f0f0',\n            strokeWidth: 2,\n            textAllowOverlap: false,\n            padding: [5, 5],\n            textOffset: [0, 40]\n          }\n        }\n      }, {\n        type: 'dot',\n        zIndex: 2,\n        source: {\n          data: data,\n          parser: {\n            type: 'json',\n            x: 'lng',\n            y: 'lat'\n          }\n        },\n        color: '#1AA9FF',\n        size: {\n          field: 'value',\n          value: function value(_ref2) {\n            var _value = _ref2.value;\n            return _value / 200;\n          }\n        },\n        style: {\n          opacity: 1,\n          stroke: '#fff',\n          strokeWidth: 1\n        },\n        tooltip: {\n          items: ['name', 'value']\n        }\n      }],\n      layers: [],\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Muti Plots","order":801},"zh":{"title":"多图表","order":801}}},{"relativePath":"advanced-plot/muti-plots/demo/world-bubble.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/advanced-plot/muti-plots/demo/world-bubble.ts","order":0,"filename":"world-bubble.ts","title":{"zh":"世界气泡图","en":"World bubble map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/WLHL2Z1y5G/e8a90e39-4b93-4e91-87ad-519123a218ed.png","source":"import { L7Plot } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'country')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    new L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      plots: [\n        {\n          type: 'choropleth',\n          zIndex: 1,\n          source: {\n            data: [],\n            joinBy: {\n              sourceField: 'code',\n              geoField: 'adcode',\n            },\n          },\n          viewLevel: {\n            level: 'world',\n            adcode: 'all',\n          },\n          autoFit: true,\n          color: '#ccc',\n          style: {\n            opacity: 1,\n            stroke: '#bdbdbd',\n            lineWidth: 0.6,\n            lineOpacity: 0.8,\n          },\n          chinaBorder: false,\n          label: {\n            visible: true,\n            field: 'name',\n            style: {\n              fill: '#000',\n              opacity: 0.8,\n              fontSize: 10,\n              stroke: '#fff',\n              strokeWidth: 2,\n              textAllowOverlap: false,\n              padding: [5, 5],\n              textOffset: [0, 60],\n            },\n          },\n        },\n        {\n          type: 'dot',\n          zIndex: 2,\n          source: {\n            data: data,\n            parser: { type: 'json', x: 'lng', y: 'lat' },\n          },\n          color: {\n            field: 'value',\n            value: ['#feedde', '#fdd0a2', '#fdae6b', '#fd8d3c', '#e6550d', '#a63603'],\n            scale: { type: 'quantile' },\n          },\n          size: 15,\n          style: {\n            opacity: 1,\n            stroke: '#fff',\n            strokeWidth: 1,\n          },\n          tooltip: {\n            items: ['name', 'value'],\n          },\n        },\n      ],\n      layers: [],\n      zoom: {\n        position: 'bottomright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.worldBubble = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'country';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.L7Plot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      plots: [{\n        type: 'choropleth',\n        zIndex: 1,\n        source: {\n          data: [],\n          joinBy: {\n            sourceField: 'code',\n            geoField: 'adcode'\n          }\n        },\n        viewLevel: {\n          level: 'world',\n          adcode: 'all'\n        },\n        autoFit: true,\n        color: '#ccc',\n        style: {\n          opacity: 1,\n          stroke: '#bdbdbd',\n          lineWidth: 0.6,\n          lineOpacity: 0.8\n        },\n        chinaBorder: false,\n        label: {\n          visible: true,\n          field: 'name',\n          style: {\n            fill: '#000',\n            opacity: 0.8,\n            fontSize: 10,\n            stroke: '#fff',\n            strokeWidth: 2,\n            textAllowOverlap: false,\n            padding: [5, 5],\n            textOffset: [0, 60]\n          }\n        }\n      }, {\n        type: 'dot',\n        zIndex: 2,\n        source: {\n          data: data,\n          parser: {\n            type: 'json',\n            x: 'lng',\n            y: 'lat'\n          }\n        },\n        color: {\n          field: 'value',\n          value: ['#feedde', '#fdd0a2', '#fdae6b', '#fd8d3c', '#e6550d', '#a63603'],\n          scale: {\n            type: 'quantile'\n          }\n        },\n        size: 15,\n        style: {\n          opacity: 1,\n          stroke: '#fff',\n          strokeWidth: 1\n        },\n        tooltip: {\n          items: ['name', 'value']\n        }\n      }],\n      layers: [],\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Muti Plots","order":801},"zh":{"title":"多图表","order":801}}},{"relativePath":"area/division/demo/chinese-citys.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/area/division/demo/chinese-citys.ts","order":1,"filename":"chinese-citys.ts","title":{"zh":"中国城市","en":"Chinese citys"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/chBkEDzIdw/8e24ce05-3bae-433f-9423-e5f889411d70.png","source":"import { Area } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/bmw-prod/707cd4be-8ffe-4778-b863-3335eefd5fd5.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      autoFit: true,\n      color: {\n        field: 'code',\n        value: ['#fee5d9', '#fcae91', '#fb6a4a', '#de2d26', '#a50f15'],\n        scale: { type: 'quantile' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#fff',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      state: {\n        active: true,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [8, 8],\n        },\n      },\n      tooltip: {\n        items: ['name', 'code'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chineseCitys = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/707cd4be-8ffe-4778-b863-3335eefd5fd5.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      autoFit: true,\n      color: {\n        field: 'code',\n        value: ['#fee5d9', '#fcae91', '#fb6a4a', '#de2d26', '#a50f15'],\n        scale: {\n          type: 'quantile'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#fff',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      state: {\n        active: true\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [8, 8]\n        }\n      },\n      tooltip: {\n        items: ['name', 'code']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Division Fill","order":600},"zh":{"title":"区域填充","order":600}}},{"relativePath":"area/division/demo/chinese-provinces.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/area/division/demo/chinese-provinces.ts","order":0,"filename":"chinese-provinces.ts","title":{"zh":"中国省份","en":"Chinese provinces"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/xX10CNIu4b/8a064058-518e-4860-af54-58ca17cae985.png","source":"import { Area } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/bmw-prod/d6da7ac1-8b4f-4a55-93ea-e81aa08f0cf3.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      autoFit: true,\n      color: {\n        field: 'adcode',\n        value: ['rgb(239,243,255)', 'rgb(189,215,231)', 'rgb(107,174,214)', 'rgb(49,130,189)', 'rgb(8,81,156)'],\n        scale: { type: 'quantile' },\n      },\n      style: {\n        opacity: 1,\n        stroke: 'rgb(93,112,146)',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      state: {\n        active: true,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      tooltip: {\n        items: ['name', 'adcode'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chineseProvinces = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/bmw-prod/d6da7ac1-8b4f-4a55-93ea-e81aa08f0cf3.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      autoFit: true,\n      color: {\n        field: 'adcode',\n        value: ['rgb(239,243,255)', 'rgb(189,215,231)', 'rgb(107,174,214)', 'rgb(49,130,189)', 'rgb(8,81,156)'],\n        scale: {\n          type: 'quantile'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: 'rgb(93,112,146)',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      state: {\n        active: true\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Division Fill","order":600},"zh":{"title":"区域填充","order":600}}},{"relativePath":"area/interactive/demo/multiple-choice.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/area/interactive/demo/multiple-choice.ts","order":1,"filename":"multiple-choice.ts","title":{"zh":"多选","en":"Multiple choice"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/wiunBM1p0N/4d58f32a-d2d3-40dc-824d-13e8207a4789.png","source":"import { Area } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/1d27c363-af3a-469e-ab5b-7a7e1ce4f311.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      autoFit: true,\n      color: {\n        field: 'unit_price',\n        value: [\n          '#1A4397',\n          '#2555B7',\n          '#3165D1',\n          '#467BE8',\n          '#6296FE',\n          '#7EA6F9',\n          '#98B7F7',\n          '#BDD0F8',\n          '#DDE6F7',\n          '#F2F5FC',\n        ].reverse(),\n        scale: { type: 'quantile' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#fff',\n        lineWidth: 0.8,\n        lineOpacity: 1,\n      },\n      state: {\n        active: true,\n        select: {\n          stroke: 'yellow',\n          lineWidth: 1.5,\n          lineOpacity: 0.8,\n        },\n      },\n      enabledMultiSelect: true,\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: 'black',\n          opacity: 0.5,\n          fontSize: 12,\n          spacing: 1,\n          padding: [15, 15],\n        },\n      },\n      tooltip: {\n        items: ['name', 'code'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.multipleChoice = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/1d27c363-af3a-469e-ab5b-7a7e1ce4f311.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      autoFit: true,\n      color: {\n        field: 'unit_price',\n        value: ['#1A4397', '#2555B7', '#3165D1', '#467BE8', '#6296FE', '#7EA6F9', '#98B7F7', '#BDD0F8', '#DDE6F7', '#F2F5FC'].reverse(),\n        scale: {\n          type: 'quantile'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#fff',\n        lineWidth: 0.8,\n        lineOpacity: 1\n      },\n      state: {\n        active: true,\n        select: {\n          stroke: 'yellow',\n          lineWidth: 1.5,\n          lineOpacity: 0.8\n        }\n      },\n      enabledMultiSelect: true,\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: 'black',\n          opacity: 0.5,\n          fontSize: 12,\n          spacing: 1,\n          padding: [15, 15]\n        }\n      },\n      tooltip: {\n        items: ['name', 'code']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Map Interaction","order":601},"zh":{"title":"区域交互","order":601}}},{"relativePath":"area/interactive/demo/single-choice.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/area/interactive/demo/single-choice.ts","order":0,"filename":"single-choice.ts","title":{"zh":"单选","en":"Single choice"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/Ths%26mCNgFa/2c4d5660-5946-49e8-8917-cdbeb37be073.png","source":"import { Area } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/d36ad90e-3902-4742-b8a2-d93f7e5dafa2.json')\n  .then((response) => response.json())\n  .then((data) => {\n    const color = [\n      'rgb(255,255,217)',\n      'rgb(237,248,177)',\n      'rgb(199,233,180)',\n      'rgb(127,205,187)',\n      'rgb(65,182,196)',\n      'rgb(29,145,192)',\n      'rgb(34,94,168)',\n      'rgb(12,44,132)',\n    ];\n\n    new Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      autoFit: true,\n      color: {\n        field: 'density',\n        value: color,\n        scale: { type: 'quantile' },\n      },\n      style: {\n        opacity: 1,\n        stroke: 'rgb(93,112,146)',\n        lineType: 'dash',\n        lineDash: [2, 2],\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      state: {\n        active: true,\n        select: true,\n      },\n      tooltip: {\n        items: ['name', 'density'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.singleChoice = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d36ad90e-3902-4742-b8a2-d93f7e5dafa2.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var color = ['rgb(255,255,217)', 'rgb(237,248,177)', 'rgb(199,233,180)', 'rgb(127,205,187)', 'rgb(65,182,196)', 'rgb(29,145,192)', 'rgb(34,94,168)', 'rgb(12,44,132)'];\n    new _l7plot.Area('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      autoFit: true,\n      color: {\n        field: 'density',\n        value: color,\n        scale: {\n          type: 'quantile'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: 'rgb(93,112,146)',\n        lineType: 'dash',\n        lineDash: [2, 2],\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      state: {\n        active: true,\n        select: true\n      },\n      tooltip: {\n        items: ['name', 'density']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Map Interaction","order":601},"zh":{"title":"区域交互","order":601}}},{"relativePath":"choropleth/administrative/demo/administrative-switch.tsx","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/administrative-switch.tsx","order":7,"filename":"administrative-switch.tsx","title":{"zh":"行政区域切换","en":"Administrative Switch"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/QjOk7yyaCP/f56f18d5-0397-4ca0-85f0-9f1458562785.png","source":"import React, { useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Cascader } from 'antd';\nimport { Choropleth } from '@antv/l7plot';\n\nfunction AdministrativeSwitch() {\n  const administrativeList = useRef([]);\n  const [administrativeTree, setAdministrativeTree] = useState([]);\n  const map = useRef<Choropleth>();\n\n  const getRandomNumber = (min = 10, max = 2000) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  useEffect(() => {\n    fetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-tree.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        const china = data.filter(({ adcode }) => adcode === 100000);\n        setAdministrativeTree(china);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n      .then((response) => response.json())\n      .then((list) => {\n        administrativeList.current = list;\n        const data = list\n          .filter(({ level }) => level === 'province')\n          .map((item) => Object.assign({}, item, { value: getRandomNumber() }));\n\n        const chinaMap = new Choropleth('mapContainer', {\n          map: {\n            type: 'mapbox',\n            style: 'blank',\n            center: [120.19382669582967, 30.258134],\n            zoom: 3,\n            pitch: 0,\n          },\n          source: {\n            data: data,\n            joinBy: {\n              sourceField: 'adcode',\n              geoField: 'adcode',\n            },\n          },\n          viewLevel: {\n            level: 'country',\n            adcode: '100000',\n          },\n          autoFit: true,\n          color: {\n            field: 'value',\n            value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n            scale: { type: 'quantize' },\n          },\n          style: {\n            opacity: 1,\n            stroke: '#ccc',\n            lineWidth: 0.6,\n            lineOpacity: 1,\n          },\n          chinaBorder: {\n            // 国界\n            national: { color: '#ccc', width: 1, opacity: 1 },\n            // 争议\n            dispute: { color: '#ccc', width: 1, opacity: 0.8, dashArray: [2, 2] },\n            // 海洋\n            coast: { color: '#ccc', width: 0.7, opacity: 0.8 },\n            // 港澳\n            hkm: { color: 'gray', width: 0.7, opacity: 0.8 },\n          },\n          label: {\n            visible: true,\n            field: 'name',\n            style: {\n              fill: '#000',\n              opacity: 0.8,\n              fontSize: 10,\n              stroke: '#fff',\n              strokeWidth: 1.5,\n              textAllowOverlap: false,\n              padding: [5, 5],\n            },\n          },\n          state: {\n            active: { stroke: 'black', lineWidth: 1 },\n          },\n          tooltip: {\n            items: ['name', 'adcode', 'value'],\n          },\n          zoom: {\n            position: 'bottomright',\n          },\n          legend: {\n            position: 'bottomleft',\n          },\n        });\n\n        map.current = chinaMap;\n      });\n\n    return () => map.current?.destroy();\n  }, []);\n\n  const onCascaderChange = (value, selectedOptions) => {\n    const currentSelected = selectedOptions[selectedOptions.length - 1];\n    const { adcode, level, children } = currentSelected;\n    if (map.current) {\n      const data = children\n        ? children.map((item) => ({ adcode: item.adcode, value: getRandomNumber() }))\n        : [{ adcode, value: getRandomNumber() }];\n      map.current.changeView({ adcode, level }, { source: { data } });\n    }\n  };\n\n  return (\n    <>\n      <div\n        id=\"mapContainer\"\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      />\n      {administrativeTree.length && (\n        <Cascader\n          style={{\n            width: 300,\n            zIndex: 2,\n            position: 'absolute',\n            right: '10px',\n            top: '10px',\n          }}\n          changeOnSelect\n          allowClear={false}\n          fieldNames={{ label: 'name', value: 'adcode', children: 'children' }}\n          defaultValue={[100000]}\n          options={administrativeTree}\n          onChange={onCascaderChange}\n        />\n      )}\n    </>\n  );\n}\n\nReactDOM.render(<AdministrativeSwitch />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"antd\", \"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"antd\"), require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.antd, global.l7plot);\n    global.administrativeSwitch = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _antd, _l7plot) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function AdministrativeSwitch() {\n    var administrativeList = (0, _react.useRef)([]);\n\n    var _useState = (0, _react.useState)([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        administrativeTree = _useState2[0],\n        setAdministrativeTree = _useState2[1];\n\n    var map = (0, _react.useRef)();\n\n    var getRandomNumber = function getRandomNumber() {\n      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n      return Math.random() * (max - min) + min;\n    };\n\n    (0, _react.useEffect)(function () {\n      fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-tree.json\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var china = data.filter(function (_ref) {\n          var adcode = _ref.adcode;\n          return adcode === 100000;\n        });\n        setAdministrativeTree(china);\n      });\n    }, []);\n    (0, _react.useEffect)(function () {\n      fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n        return response.json();\n      }).then(function (list) {\n        administrativeList.current = list;\n        var data = list.filter(function (_ref2) {\n          var level = _ref2.level;\n          return level === 'province';\n        }).map(function (item) {\n          return Object.assign({}, item, {\n            value: getRandomNumber()\n          });\n        });\n        var chinaMap = new _l7plot.Choropleth('mapContainer', {\n          map: {\n            type: 'mapbox',\n            style: 'blank',\n            center: [120.19382669582967, 30.258134],\n            zoom: 3,\n            pitch: 0\n          },\n          source: {\n            data: data,\n            joinBy: {\n              sourceField: 'adcode',\n              geoField: 'adcode'\n            }\n          },\n          viewLevel: {\n            level: 'country',\n            adcode: '100000'\n          },\n          autoFit: true,\n          color: {\n            field: 'value',\n            value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n            scale: {\n              type: 'quantize'\n            }\n          },\n          style: {\n            opacity: 1,\n            stroke: '#ccc',\n            lineWidth: 0.6,\n            lineOpacity: 1\n          },\n          chinaBorder: {\n            // 国界\n            national: {\n              color: '#ccc',\n              width: 1,\n              opacity: 1\n            },\n            // 争议\n            dispute: {\n              color: '#ccc',\n              width: 1,\n              opacity: 0.8,\n              dashArray: [2, 2]\n            },\n            // 海洋\n            coast: {\n              color: '#ccc',\n              width: 0.7,\n              opacity: 0.8\n            },\n            // 港澳\n            hkm: {\n              color: 'gray',\n              width: 0.7,\n              opacity: 0.8\n            }\n          },\n          label: {\n            visible: true,\n            field: 'name',\n            style: {\n              fill: '#000',\n              opacity: 0.8,\n              fontSize: 10,\n              stroke: '#fff',\n              strokeWidth: 1.5,\n              textAllowOverlap: false,\n              padding: [5, 5]\n            }\n          },\n          state: {\n            active: {\n              stroke: 'black',\n              lineWidth: 1\n            }\n          },\n          tooltip: {\n            items: ['name', 'adcode', 'value']\n          },\n          zoom: {\n            position: 'bottomright'\n          },\n          legend: {\n            position: 'bottomleft'\n          }\n        });\n        map.current = chinaMap;\n      });\n      return function () {\n        var _map$current;\n\n        return (_map$current = map.current) === null || _map$current === void 0 ? void 0 : _map$current.destroy();\n      };\n    }, []);\n\n    var onCascaderChange = function onCascaderChange(value, selectedOptions) {\n      var currentSelected = selectedOptions[selectedOptions.length - 1];\n      var adcode = currentSelected.adcode,\n          level = currentSelected.level,\n          children = currentSelected.children;\n\n      if (map.current) {\n        var data = children ? children.map(function (item) {\n          return {\n            adcode: item.adcode,\n            value: getRandomNumber()\n          };\n        }) : [{\n          adcode: adcode,\n          value: getRandomNumber()\n        }];\n        map.current.changeView({\n          adcode: adcode,\n          level: level\n        }, {\n          source: {\n            data: data\n          }\n        });\n      }\n    };\n\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"mapContainer\",\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }), administrativeTree.length && /*#__PURE__*/_react.default.createElement(_antd.Cascader, {\n      style: {\n        width: 300,\n        zIndex: 2,\n        position: 'absolute',\n        right: '10px',\n        top: '10px'\n      },\n      changeOnSelect: true,\n      allowClear: false,\n      fieldNames: {\n        label: 'name',\n        value: 'adcode',\n        children: 'children'\n      },\n      defaultValue: [100000],\n      options: administrativeTree,\n      onChange: onCascaderChange\n    }));\n  }\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(AdministrativeSwitch, null), document.getElementById('container'));\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/china-city.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/china-city.ts","order":2,"filename":"china-city.ts","title":{"zh":"中国市级地图","en":"China Citys Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/GN35RftkmZ/c53bc5ab-189f-42a2-9288-7b34f616f18d.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'city')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n        granularity: 'city',\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chinaCity = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'city';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n        granularity: 'city'\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/china-map.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/china-map.ts","order":1,"filename":"china-map.ts","title":{"zh":"中国地图","en":"China Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/qSFaP32j8q/4428acf4-9362-4705-90c9-de950be5a177.png","source":"import { Choropleth } from '@antv/l7plot';\n\nconst ProvinceData = [\n  {\n    name: '云南省',\n    code: 530000,\n    value: 17881.12,\n  },\n  {\n    name: '黑龙江省',\n    code: 230000,\n    value: 16361.62,\n  },\n  {\n    name: '贵州省',\n    code: 520000,\n    value: 14806.45,\n  },\n  {\n    name: '北京市',\n    code: 110000,\n    value: 30319.98,\n  },\n  {\n    name: '河北省',\n    code: 130000,\n    value: 36010.27,\n  },\n  {\n    name: '山西省',\n    code: 140000,\n    value: 16818.11,\n  },\n  {\n    name: '吉林省',\n    code: 220000,\n    value: 15074,\n  },\n  {\n    name: '宁夏回族自治区',\n    code: 640000,\n    value: 3705.18,\n  },\n  {\n    name: '辽宁省',\n    code: 210000,\n    value: 25315.35,\n  },\n  {\n    name: '海南省',\n    code: 460000,\n    value: 4832.05,\n  },\n  {\n    name: '内蒙古自治区',\n    code: 150000,\n    value: 17289.22,\n  },\n  {\n    name: '天津市',\n    code: 120000,\n    value: 18809.64,\n  },\n  {\n    name: '新疆维吾尔自治区',\n    code: 650000,\n    value: 12199.08,\n  },\n  {\n    name: '上海市',\n    code: 310000,\n    value: 32679.87,\n  },\n  {\n    name: '陕西省',\n    code: 610000,\n    value: 24438.32,\n  },\n  {\n    name: '甘肃省',\n    code: 620000,\n    value: 8246.07,\n  },\n  {\n    name: '安徽省',\n    code: 340000,\n    value: 30006.82,\n  },\n  {\n    name: '香港特别行政区',\n    code: 810000,\n    value: 0,\n  },\n  {\n    name: '广东省',\n    code: 440000,\n    value: 97277.77,\n  },\n  {\n    name: '河南省',\n    code: 410000,\n    value: 48055.86,\n  },\n  {\n    name: '湖南省',\n    code: 430000,\n    value: 36425.78,\n  },\n  {\n    name: '江西省',\n    code: 360000,\n    value: 21984.78,\n  },\n  {\n    name: '四川省',\n    code: 510000,\n    value: 40678.13,\n  },\n  {\n    name: '广西壮族自治区',\n    code: 450000,\n    value: 20353.51,\n  },\n  {\n    name: '江苏省',\n    code: 320000,\n    value: 92595.4,\n  },\n  {\n    name: '澳门特别行政区',\n    code: 820000,\n    value: null,\n  },\n  {\n    name: '浙江省',\n    code: 330000,\n    value: 56197.15,\n  },\n  {\n    name: '山东省',\n    code: 370000,\n    value: 76469.67,\n  },\n  {\n    name: '青海省',\n    code: 630000,\n    value: 2865.23,\n  },\n  {\n    name: '重庆市',\n    code: 500000,\n    value: 20363.19,\n  },\n  {\n    name: '福建省',\n    code: 350000,\n    value: 35804.04,\n  },\n  {\n    name: '湖北省',\n    code: 420000,\n    value: 39366.55,\n  },\n  {\n    name: '西藏自治区',\n    code: 540000,\n    value: 1477.63,\n  },\n  {\n    name: '台湾省',\n    code: 710000,\n    value: null,\n  },\n];\n\nnew Choropleth('container', {\n  map: {\n    type: 'mapbox',\n    style: 'blank',\n    center: [120.19382669582967, 30.258134],\n    zoom: 3,\n    pitch: 0,\n  },\n  source: {\n    data: ProvinceData,\n    joinBy: {\n      sourceField: 'code',\n      geoField: 'adcode',\n    },\n  },\n  viewLevel: {\n    level: 'country',\n    adcode: 100000,\n  },\n  autoFit: true,\n  color: {\n    field: 'value',\n    value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n    scale: { type: 'quantile' },\n  },\n  style: {\n    opacity: 1,\n    stroke: '#ccc',\n    lineWidth: 0.6,\n    lineOpacity: 1,\n  },\n  label: {\n    visible: true,\n    field: 'name',\n    style: {\n      fill: '#000',\n      opacity: 0.8,\n      fontSize: 10,\n      stroke: '#fff',\n      strokeWidth: 1.5,\n      textAllowOverlap: false,\n      padding: [5, 5],\n    },\n  },\n  state: {\n    active: { stroke: 'black', lineWidth: 1 },\n  },\n  tooltip: {\n    items: ['name', 'adcode', 'value'],\n  },\n  zoom: {\n    position: 'bottomright',\n  },\n  legend: {\n    position: 'bottomleft',\n  },\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chinaMap = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  var ProvinceData = [{\n    name: '云南省',\n    code: 530000,\n    value: 17881.12\n  }, {\n    name: '黑龙江省',\n    code: 230000,\n    value: 16361.62\n  }, {\n    name: '贵州省',\n    code: 520000,\n    value: 14806.45\n  }, {\n    name: '北京市',\n    code: 110000,\n    value: 30319.98\n  }, {\n    name: '河北省',\n    code: 130000,\n    value: 36010.27\n  }, {\n    name: '山西省',\n    code: 140000,\n    value: 16818.11\n  }, {\n    name: '吉林省',\n    code: 220000,\n    value: 15074\n  }, {\n    name: '宁夏回族自治区',\n    code: 640000,\n    value: 3705.18\n  }, {\n    name: '辽宁省',\n    code: 210000,\n    value: 25315.35\n  }, {\n    name: '海南省',\n    code: 460000,\n    value: 4832.05\n  }, {\n    name: '内蒙古自治区',\n    code: 150000,\n    value: 17289.22\n  }, {\n    name: '天津市',\n    code: 120000,\n    value: 18809.64\n  }, {\n    name: '新疆维吾尔自治区',\n    code: 650000,\n    value: 12199.08\n  }, {\n    name: '上海市',\n    code: 310000,\n    value: 32679.87\n  }, {\n    name: '陕西省',\n    code: 610000,\n    value: 24438.32\n  }, {\n    name: '甘肃省',\n    code: 620000,\n    value: 8246.07\n  }, {\n    name: '安徽省',\n    code: 340000,\n    value: 30006.82\n  }, {\n    name: '香港特别行政区',\n    code: 810000,\n    value: 0\n  }, {\n    name: '广东省',\n    code: 440000,\n    value: 97277.77\n  }, {\n    name: '河南省',\n    code: 410000,\n    value: 48055.86\n  }, {\n    name: '湖南省',\n    code: 430000,\n    value: 36425.78\n  }, {\n    name: '江西省',\n    code: 360000,\n    value: 21984.78\n  }, {\n    name: '四川省',\n    code: 510000,\n    value: 40678.13\n  }, {\n    name: '广西壮族自治区',\n    code: 450000,\n    value: 20353.51\n  }, {\n    name: '江苏省',\n    code: 320000,\n    value: 92595.4\n  }, {\n    name: '澳门特别行政区',\n    code: 820000,\n    value: null\n  }, {\n    name: '浙江省',\n    code: 330000,\n    value: 56197.15\n  }, {\n    name: '山东省',\n    code: 370000,\n    value: 76469.67\n  }, {\n    name: '青海省',\n    code: 630000,\n    value: 2865.23\n  }, {\n    name: '重庆市',\n    code: 500000,\n    value: 20363.19\n  }, {\n    name: '福建省',\n    code: 350000,\n    value: 35804.04\n  }, {\n    name: '湖北省',\n    code: 420000,\n    value: 39366.55\n  }, {\n    name: '西藏自治区',\n    code: 540000,\n    value: 1477.63\n  }, {\n    name: '台湾省',\n    code: 710000,\n    value: null\n  }];\n  new _l7plot.Choropleth('container', {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n      center: [120.19382669582967, 30.258134],\n      zoom: 3,\n      pitch: 0\n    },\n    source: {\n      data: ProvinceData,\n      joinBy: {\n        sourceField: 'code',\n        geoField: 'adcode'\n      }\n    },\n    viewLevel: {\n      level: 'country',\n      adcode: 100000\n    },\n    autoFit: true,\n    color: {\n      field: 'value',\n      value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n      scale: {\n        type: 'quantile'\n      }\n    },\n    style: {\n      opacity: 1,\n      stroke: '#ccc',\n      lineWidth: 0.6,\n      lineOpacity: 1\n    },\n    label: {\n      visible: true,\n      field: 'name',\n      style: {\n        fill: '#000',\n        opacity: 0.8,\n        fontSize: 10,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: false,\n        padding: [5, 5]\n      }\n    },\n    state: {\n      active: {\n        stroke: 'black',\n        lineWidth: 1\n      }\n    },\n    tooltip: {\n      items: ['name', 'adcode', 'value']\n    },\n    zoom: {\n      position: 'bottomright'\n    },\n    legend: {\n      position: 'bottomleft'\n    }\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/hangzhou-city.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/hangzhou-city.ts","order":5,"filename":"hangzhou-city.ts","title":{"zh":"杭州市地图","en":"Hangzhou City Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/kagsfItG%26g/49861247-bc88-4d64-b5b1-0913c8ff55f8.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level, parent }) => level === 'district' && parent === 330100)\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'city',\n        adcode: 330100,\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.hangzhouCity = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level,\n          parent = _ref.parent;\n      return level === 'district' && parent === 330100;\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'city',\n        adcode: 330100\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/world-map.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/world-map.ts","order":0,"filename":"world-map.ts","title":{"zh":"世界地图","en":"World Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/wRiG4Cl1tB/9c40912e-13f2-42c6-a580-e86160b35962.png","source":"import { Choropleth } from '@antv/l7plot';\n\nnew Choropleth('container', {\n  map: {\n    type: 'mapbox',\n    style: 'blank',\n    center: [120.19382669582967, 30.258134],\n    zoom: 3,\n    pitch: 0,\n  },\n  source: {\n    data: [\n      { name: '中华人民共和国', value: 200 },\n      { name: '美国', value: 250 },\n      { name: '俄罗斯', value: 180 },\n      { name: '日本', value: 120 },\n      { name: '加拿大', value: 130 },\n      { name: '澳大利亚', value: 130 },\n      { name: '新加坡', value: 170 },\n      { name: '巴西', value: 80 },\n    ],\n    joinBy: {\n      sourceField: 'name',\n      geoField: 'name',\n    },\n  },\n  viewLevel: {\n    level: 'world',\n    adcode: 'all',\n  },\n  autoFit: true,\n  color: {\n    field: 'value',\n    value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n    scale: { type: 'quantize' },\n  },\n  style: {\n    opacity: 1,\n    stroke: '#ccc',\n    lineWidth: 0.6,\n    lineOpacity: 1,\n    fillBottomColor: '#d8d8d84d',\n  },\n  chinaBorder: false,\n  label: {\n    visible: true,\n    field: 'name',\n    style: {\n      fill: '#000',\n      opacity: 0.8,\n      fontSize: 10,\n      stroke: '#fff',\n      strokeWidth: 1.5,\n      textAllowOverlap: false,\n      padding: [5, 5],\n    },\n  },\n  state: {\n    active: true,\n    select: {\n      stroke: 'black',\n      lineWidth: 1.5,\n      lineOpacity: 0.8,\n    },\n  },\n  tooltip: {\n    items: ['name', 'adcode', 'value'],\n  },\n  zoom: {\n    position: 'bottomright',\n  },\n  legend: {\n    position: 'bottomleft',\n  },\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.worldMap = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  new _l7plot.Choropleth('container', {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n      center: [120.19382669582967, 30.258134],\n      zoom: 3,\n      pitch: 0\n    },\n    source: {\n      data: [{\n        name: '中华人民共和国',\n        value: 200\n      }, {\n        name: '美国',\n        value: 250\n      }, {\n        name: '俄罗斯',\n        value: 180\n      }, {\n        name: '日本',\n        value: 120\n      }, {\n        name: '加拿大',\n        value: 130\n      }, {\n        name: '澳大利亚',\n        value: 130\n      }, {\n        name: '新加坡',\n        value: 170\n      }, {\n        name: '巴西',\n        value: 80\n      }],\n      joinBy: {\n        sourceField: 'name',\n        geoField: 'name'\n      }\n    },\n    viewLevel: {\n      level: 'world',\n      adcode: 'all'\n    },\n    autoFit: true,\n    color: {\n      field: 'value',\n      value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n      scale: {\n        type: 'quantize'\n      }\n    },\n    style: {\n      opacity: 1,\n      stroke: '#ccc',\n      lineWidth: 0.6,\n      lineOpacity: 1,\n      fillBottomColor: '#d8d8d84d'\n    },\n    chinaBorder: false,\n    label: {\n      visible: true,\n      field: 'name',\n      style: {\n        fill: '#000',\n        opacity: 0.8,\n        fontSize: 10,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: false,\n        padding: [5, 5]\n      }\n    },\n    state: {\n      active: true,\n      select: {\n        stroke: 'black',\n        lineWidth: 1.5,\n        lineOpacity: 0.8\n      }\n    },\n    tooltip: {\n      items: ['name', 'adcode', 'value']\n    },\n    zoom: {\n      position: 'bottomright'\n    },\n    legend: {\n      position: 'bottomleft'\n    }\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/xihu-district.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/xihu-district.ts","order":6,"filename":"xihu-district.ts","title":{"zh":"西湖区地图","en":"Xihu District Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/04xm5U4yvt/828e6055-f005-4dba-8936-aaf451487db9.png","source":"import { Choropleth } from '@antv/l7plot';\n\nnew Choropleth('container', {\n  map: {\n    type: 'mapbox',\n    style: 'blank',\n    center: [120.19382669582967, 30.258134],\n    zoom: 3,\n    pitch: 0,\n  },\n  source: {\n    data: [{ adcode: 330106, value: 200 }],\n    joinBy: {\n      sourceField: 'adcode',\n      geoField: 'adcode',\n    },\n  },\n  viewLevel: {\n    level: 'district',\n    adcode: 330106,\n  },\n  autoFit: true,\n  color: {\n    field: 'value',\n    value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n    scale: { type: 'quantize' },\n  },\n  style: {\n    opacity: 1,\n    stroke: '#ccc',\n    lineWidth: 0.6,\n    lineOpacity: 1,\n  },\n  label: {\n    visible: true,\n    field: 'name',\n    style: {\n      fill: '#000',\n      opacity: 0.8,\n      fontSize: 10,\n      stroke: '#fff',\n      strokeWidth: 1.5,\n      textAllowOverlap: false,\n      padding: [5, 5],\n    },\n  },\n  state: {\n    active: { stroke: 'black', lineWidth: 1 },\n  },\n  tooltip: {\n    items: ['name', 'adcode', 'value'],\n  },\n  zoom: {\n    position: 'bottomright',\n  },\n  legend: {\n    position: 'bottomleft',\n  },\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.xihuDistrict = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  new _l7plot.Choropleth('container', {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n      center: [120.19382669582967, 30.258134],\n      zoom: 3,\n      pitch: 0\n    },\n    source: {\n      data: [{\n        adcode: 330106,\n        value: 200\n      }],\n      joinBy: {\n        sourceField: 'adcode',\n        geoField: 'adcode'\n      }\n    },\n    viewLevel: {\n      level: 'district',\n      adcode: 330106\n    },\n    autoFit: true,\n    color: {\n      field: 'value',\n      value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n      scale: {\n        type: 'quantize'\n      }\n    },\n    style: {\n      opacity: 1,\n      stroke: '#ccc',\n      lineWidth: 0.6,\n      lineOpacity: 1\n    },\n    label: {\n      visible: true,\n      field: 'name',\n      style: {\n        fill: '#000',\n        opacity: 0.8,\n        fontSize: 10,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: false,\n        padding: [5, 5]\n      }\n    },\n    state: {\n      active: {\n        stroke: 'black',\n        lineWidth: 1\n      }\n    },\n    tooltip: {\n      items: ['name', 'adcode', 'value']\n    },\n    zoom: {\n      position: 'bottomright'\n    },\n    legend: {\n      position: 'bottomleft'\n    }\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/zhejiang-province-district.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/zhejiang-province-district.ts","order":4,"filename":"zhejiang-province-district.ts","title":{"zh":"浙江省县级地图","en":"Zhejiang District Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/YQU0%24nl0gh/c9a9a70d-8abc-42f6-8795-856646346326.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'district')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000,\n        granularity: 'district',\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.zhejiangProvinceDistrict = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'district';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000,\n        granularity: 'district'\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/administrative/demo/zhejiang-province.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/zhejiang-province.ts","order":3,"filename":"zhejiang-province.ts","title":{"zh":"浙江省地图","en":"Zhejiang Province Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/tX2zfzui76/821b3d1d-421c-4f09-a44e-53422db302f6.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level, parent }) => level === 'city' && parent === 330000)\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000,\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      chinaBorder: {\n        // 国界\n        national: { color: '#ccc', width: 1, opacity: 1 },\n        // 争议\n        dispute: { color: '#ccc', width: 1, opacity: 0.8, dashArray: [2, 2] },\n        // 海洋\n        coast: { color: '#ccc', width: 0.7, opacity: 0.8 },\n        // 港澳\n        hkm: { color: 'gray', width: 0.7, opacity: 0.8 },\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.zhejiangProvince = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level,\n          parent = _ref.parent;\n      return level === 'city' && parent === 330000;\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      chinaBorder: {\n        // 国界\n        national: {\n          color: '#ccc',\n          width: 1,\n          opacity: 1\n        },\n        // 争议\n        dispute: {\n          color: '#ccc',\n          width: 1,\n          opacity: 0.8,\n          dashArray: [2, 2]\n        },\n        // 海洋\n        coast: {\n          color: '#ccc',\n          width: 0.7,\n          opacity: 0.8\n        },\n        // 港澳\n        hkm: {\n          color: 'gray',\n          width: 0.7,\n          opacity: 0.8\n        }\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Administrative Division","order":700},"zh":{"title":"行政区域","order":700}}},{"relativePath":"choropleth/drill/demo/drill-callback.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/drill/demo/drill-callback.ts","order":2,"filename":"drill-callback.ts","title":{"zh":"下钻回调","en":"Drill Callback"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/kNXBgAN4%26Z/zuanqu2.gif","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'province')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    const cityData = list\n      .filter(({ level }) => level === 'city')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 2000 }));\n\n    const districtData = list\n      .filter(({ level }) => level === 'district')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 1000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n      },\n      autoFit: true,\n      drill: {\n        steps: ['province', 'city'],\n        triggerUp: 'unclick',\n        triggerDown: 'click',\n        onDown: (from, to, callback) => {\n          const { level, granularity } = to;\n          if (granularity === 'city') {\n            callback({\n              source: { data: cityData, joinBy: { sourceField: 'adcode' } },\n            });\n          } else if (granularity === 'district') {\n            callback({\n              source: { data: districtData, joinBy: { sourceField: 'adcode' } },\n            });\n          }\n        },\n        onUp: (from, to, callback) => {\n          callback();\n        },\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.drillCallback = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'province';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    var cityData = list.filter(function (_ref2) {\n      var level = _ref2.level;\n      return level === 'city';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 2000\n      });\n    });\n    var districtData = list.filter(function (_ref3) {\n      var level = _ref3.level;\n      return level === 'district';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 1000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000\n      },\n      autoFit: true,\n      drill: {\n        steps: ['province', 'city'],\n        triggerUp: 'unclick',\n        triggerDown: 'click',\n        onDown: function onDown(from, to, callback) {\n          var level = to.level,\n              granularity = to.granularity;\n\n          if (granularity === 'city') {\n            callback({\n              source: {\n                data: cityData,\n                joinBy: {\n                  sourceField: 'adcode'\n                }\n              }\n            });\n          } else if (granularity === 'district') {\n            callback({\n              source: {\n                data: districtData,\n                joinBy: {\n                  sourceField: 'adcode'\n                }\n              }\n            });\n          }\n        },\n        onUp: function onUp(from, to, callback) {\n          callback();\n        }\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Drill down","order":701},"zh":{"title":"区域钻取","order":701}}},{"relativePath":"choropleth/drill/demo/drill-intercept.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/drill/demo/drill-intercept.ts","order":3,"filename":"drill-intercept.ts","title":{"zh":"下钻拦截","en":"Drill Intercept"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/rftSqwzjdj/zuanqu3.gif","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'province')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    const cityData = list\n      .filter(({ level }) => level === 'city')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 2000 }));\n\n    const districtData = list\n      .filter(({ level }) => level === 'district')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 1000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n      },\n      autoFit: true,\n      drill: {\n        steps: ['province', 'city'],\n        triggerUp: 'unclick',\n        triggerDown: 'click',\n        onDown: (from, to, callback) => {\n          const { adcode, level, granularity } = to;\n          // 如果是浙江省，禁止下钻\n          if (adcode === 330000) {\n            return;\n          }\n\n          if (granularity === 'city') {\n            callback({\n              source: { data: cityData, joinBy: { sourceField: 'adcode' } },\n            });\n          } else if (granularity === 'district') {\n            callback({\n              source: { data: districtData, joinBy: { sourceField: 'adcode' } },\n            });\n          }\n        },\n        onUp: (from, to, callback) => {\n          callback();\n        },\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.drillIntercept = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'province';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    var cityData = list.filter(function (_ref2) {\n      var level = _ref2.level;\n      return level === 'city';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 2000\n      });\n    });\n    var districtData = list.filter(function (_ref3) {\n      var level = _ref3.level;\n      return level === 'district';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 1000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000\n      },\n      autoFit: true,\n      drill: {\n        steps: ['province', 'city'],\n        triggerUp: 'unclick',\n        triggerDown: 'click',\n        onDown: function onDown(from, to, callback) {\n          var adcode = to.adcode,\n              level = to.level,\n              granularity = to.granularity; // 如果是浙江省，禁止下钻\n\n          if (adcode === 330000) {\n            return;\n          }\n\n          if (granularity === 'city') {\n            callback({\n              source: {\n                data: cityData,\n                joinBy: {\n                  sourceField: 'adcode'\n                }\n              }\n            });\n          } else if (granularity === 'district') {\n            callback({\n              source: {\n                data: districtData,\n                joinBy: {\n                  sourceField: 'adcode'\n                }\n              }\n            });\n          }\n        },\n        onUp: function onUp(from, to, callback) {\n          callback();\n        }\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Drill down","order":701},"zh":{"title":"区域钻取","order":701}}},{"relativePath":"choropleth/drill/demo/order-drill.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/drill/demo/order-drill.ts","order":0,"filename":"order-drill.ts","title":{"zh":"省市区下钻","en":"Order Drill"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/ftd%248FdI08/zuanqu.gif","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'province')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    const cityData = list\n      .filter(({ level }) => level === 'city')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 2000 }));\n\n    const districtData = list\n      .filter(({ level }) => level === 'district')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 1000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n      },\n      autoFit: true,\n      drill: {\n        steps: [\n          {\n            level: 'province',\n            source: { data: cityData },\n          },\n          {\n            level: 'city',\n            source: { data: districtData },\n          },\n          {\n            level: 'district',\n            source: { data: districtData },\n            // color: 'green',\n            // style: { opacity: 0.5 },\n          },\n        ],\n        triggerUp: 'unclick',\n        triggerDown: 'click',\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.orderDrill = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'province';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    var cityData = list.filter(function (_ref2) {\n      var level = _ref2.level;\n      return level === 'city';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 2000\n      });\n    });\n    var districtData = list.filter(function (_ref3) {\n      var level = _ref3.level;\n      return level === 'district';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 1000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000\n      },\n      autoFit: true,\n      drill: {\n        steps: [{\n          level: 'province',\n          source: {\n            data: cityData\n          }\n        }, {\n          level: 'city',\n          source: {\n            data: districtData\n          }\n        }, {\n          level: 'district',\n          source: {\n            data: districtData\n          } // color: 'green',\n          // style: { opacity: 0.5 },\n\n        }],\n        triggerUp: 'unclick',\n        triggerDown: 'click'\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Drill down","order":701},"zh":{"title":"区域钻取","order":701}}},{"relativePath":"choropleth/drill/demo/unorder-drill.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/drill/demo/unorder-drill.ts","order":1,"filename":"unorder-drill.ts","title":{"zh":"跨粒度下钻","en":"Unorder Drill"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/w4VwQsFCgy/zuanqu.gif","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'province')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    const districtData = list\n      .filter(({ level }) => level === 'district')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 1000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n      },\n      autoFit: true,\n      drill: {\n        steps: [\n          {\n            level: 'province',\n            granularity: 'district',\n            source: { data: districtData },\n          },\n          {\n            level: 'district',\n            source: { data: districtData },\n            // color: 'green',\n            // style: { opacity: 0.5 },\n          },\n        ],\n        triggerUp: 'unclick',\n        triggerDown: 'click',\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.unorderDrill = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'province';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    var districtData = list.filter(function (_ref2) {\n      var level = _ref2.level;\n      return level === 'district';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 1000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000\n      },\n      autoFit: true,\n      drill: {\n        steps: [{\n          level: 'province',\n          granularity: 'district',\n          source: {\n            data: districtData\n          }\n        }, {\n          level: 'district',\n          source: {\n            data: districtData\n          } // color: 'green',\n          // style: { opacity: 0.5 },\n\n        }],\n        triggerUp: 'unclick',\n        triggerDown: 'click'\n      },\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Drill down","order":701},"zh":{"title":"区域钻取","order":701}}},{"relativePath":"dot/bobble/demo/air-temperature.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/bobble/demo/air-temperature.ts","order":0,"filename":"air-temperature.ts","title":{"zh":"国内气温气泡","en":"Air bubble map of China"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/gozHK9LNFl/d37bc490-722b-4b73-a627-3c261b0401d2.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [102.447303, 37.753574],\n        zoom: 5,\n        pitch: 0,\n      },\n      source: {\n        data: data.list,\n        parser: {\n          type: 'json',\n          x: 'j',\n          y: 'w',\n        },\n      },\n      color: {\n        field: 't',\n        value: [\n          '#03071e',\n          '#370617',\n          '#6a040f',\n          '#9d0208',\n          '#d00000',\n          '#dc2f02',\n          '#e85d04',\n          '#f48c06',\n          '#faa307',\n          '#ffba08',\n        ].reverse(),\n        scale: { type: 'quantize' },\n      },\n      size: {\n        field: 't',\n        value: [2, 18],\n      },\n      style: {\n        opacity: 0.5,\n        strokeWidth: 0,\n      },\n      state: { active: { color: '#FFF684' } },\n      autoFit: true,\n      label: {\n        visible: false, // 是否显示标签图层\n        field: 't',\n        style: {\n          fill: '#fff',\n          opacity: 0.6,\n          fontSize: 12,\n          textAnchor: 'top', // 文本相对锚点的位置 center|left|right|top|bottom|top-left\n          textOffset: [0, 20], // 文本相对锚点的偏移量 [水平, 垂直]\n          spacing: 1, // 字符间距\n          padding: [5, 5], // 文本包围盒 padding [水平，垂直]，影响碰撞检测结果，避免相邻文本靠的太近\n          stroke: '#ffffff', // 描边颜色\n          strokeWidth: 0.3, // 描边宽度\n          strokeOpacity: 1.0,\n        },\n      },\n      tooltip: {\n        items: ['s', 't'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      scale: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.airTemperature = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/rmsportal/oVTMqfzuuRFKiDwhPSFL.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [102.447303, 37.753574],\n        zoom: 5,\n        pitch: 0\n      },\n      source: {\n        data: data.list,\n        parser: {\n          type: 'json',\n          x: 'j',\n          y: 'w'\n        }\n      },\n      color: {\n        field: 't',\n        value: ['#03071e', '#370617', '#6a040f', '#9d0208', '#d00000', '#dc2f02', '#e85d04', '#f48c06', '#faa307', '#ffba08'].reverse(),\n        scale: {\n          type: 'quantize'\n        }\n      },\n      size: {\n        field: 't',\n        value: [2, 18]\n      },\n      style: {\n        opacity: 0.5,\n        strokeWidth: 0\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      autoFit: true,\n      label: {\n        visible: false,\n        // 是否显示标签图层\n        field: 't',\n        style: {\n          fill: '#fff',\n          opacity: 0.6,\n          fontSize: 12,\n          textAnchor: 'top',\n          // 文本相对锚点的位置 center|left|right|top|bottom|top-left\n          textOffset: [0, 20],\n          // 文本相对锚点的偏移量 [水平, 垂直]\n          spacing: 1,\n          // 字符间距\n          padding: [5, 5],\n          // 文本包围盒 padding [水平，垂直]，影响碰撞检测结果，避免相邻文本靠的太近\n          stroke: '#ffffff',\n          // 描边颜色\n          strokeWidth: 0.3,\n          // 描边宽度\n          strokeOpacity: 1.0\n        }\n      },\n      tooltip: {\n        items: ['s', 't']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      scale: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Bubble Map","order":200},"zh":{"title":"气泡图","order":200}}},{"relativePath":"dot/bobble/demo/animate.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/bobble/demo/animate.ts","order":3,"filename":"animate.ts","title":{"zh":"全国交通事件气泡动画","en":"National traffic event bubble animation"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/dTdD4KQGvH/06e323e4-92ce-40d9-a58f-837adbce5f26.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/xZqmXatMnc/quanguojiaotongshijianxiangyingzhishu.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [102.447303, 37.753574],\n        zoom: 2,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      color: '#4cfd47',\n      size: 20,\n      animate: true,\n      state: { active: true },\n      autoFit: true,\n      label: {\n        field: 'cityName',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'top',\n          textOffset: [0, 20],\n        },\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n      tooltip: {\n        items: [{ field: 'cityName', alias: '名称' }],\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.animate = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/xZqmXatMnc/quanguojiaotongshijianxiangyingzhishu.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [102.447303, 37.753574],\n        zoom: 2,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      color: '#4cfd47',\n      size: 20,\n      animate: true,\n      state: {\n        active: true\n      },\n      autoFit: true,\n      label: {\n        field: 'cityName',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'top',\n          textOffset: [0, 20]\n        }\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      },\n      tooltip: {\n        items: [{\n          field: 'cityName',\n          alias: '名称'\n        }]\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Bubble Map","order":200},"zh":{"title":"气泡图","order":200}}},{"relativePath":"dot/bobble/demo/distribution-cities.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/bobble/demo/distribution-cities.ts","order":1,"filename":"distribution-cities.ts","title":{"zh":"全国城市与区县分布","en":"Distribution of cities, districts and counties in China"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/RGpOaNlkdd/1c099806-c02a-4b03-8dfe-788e982b822b.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/g5hIthhKlr/quanguoshixianweizhi.json')\n  .then((response) => response.json())\n  .then(({ list }) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        zoom: 5,\n        center: [107.4976, 32.1697],\n        pitch: 45,\n      },\n      source: {\n        data: list,\n        parser: {\n          type: 'json',\n          coordinates: 'lnglat',\n        },\n      },\n      color: '#47aff7',\n      size: {\n        field: 'style',\n        value: ({ style }) => {\n          if (style == 0) {\n            return 8;\n          } else if (style == 1) {\n            return 4;\n          } else {\n            return 2;\n          }\n        },\n      },\n      style: {\n        opacity: 0.8,\n        stroke: '#c3faff',\n        strokeWidth: 1,\n      },\n      state: { active: { color: '#FFF684' } },\n      zoom: {\n        position: 'bottomright',\n      },\n      tooltip: {\n        items: ['name'],\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.distributionCities = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/g5hIthhKlr/quanguoshixianweizhi.json').then(function (response) {\n    return response.json();\n  }).then(function (_ref) {\n    var list = _ref.list;\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        zoom: 5,\n        center: [107.4976, 32.1697],\n        pitch: 45\n      },\n      source: {\n        data: list,\n        parser: {\n          type: 'json',\n          coordinates: 'lnglat'\n        }\n      },\n      color: '#47aff7',\n      size: {\n        field: 'style',\n        value: function value(_ref2) {\n          var style = _ref2.style;\n\n          if (style == 0) {\n            return 8;\n          } else if (style == 1) {\n            return 4;\n          } else {\n            return 2;\n          }\n        }\n      },\n      style: {\n        opacity: 0.8,\n        stroke: '#c3faff',\n        strokeWidth: 1\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      tooltip: {\n        items: ['name']\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Bubble Map","order":200},"zh":{"title":"气泡图","order":200}}},{"relativePath":"dot/bobble/demo/earthquake-level.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/bobble/demo/earthquake-level.ts","order":2,"filename":"earthquake-level.ts","title":{"zh":"地震等级","en":"Earthquake level"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/JVdKQHfpZC/d3287038-6329-4bdd-8471-c830d5daf52f.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/m5r7MFHt8U/wenchuandizhenshuju.json')\n  .then((response) => response.json())\n  .then(({ data }) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [103.447303, 31.753574],\n        zoom: 7,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: { type: 'json', x: 'lng', y: 'lat' },\n      },\n      color: {\n        field: 'mag',\n        value: ['#82cf9c', '#10b3b0', '#2033ab'],\n        scale: { type: 'quantize' },\n      },\n      size: {\n        field: 'mag',\n        value: ({ mag }) => (mag - 4.3) * 10,\n      },\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0,\n      },\n      state: {\n        active: { color: '#FFF684' },\n      },\n      autoFit: true,\n      zoom: {\n        position: 'topright',\n      },\n      scale: {\n        position: 'bottomright',\n      },\n      tooltip: {\n        items: ['title', 'mag', 'depth'],\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.earthquakeLevel = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/m5r7MFHt8U/wenchuandizhenshuju.json').then(function (response) {\n    return response.json();\n  }).then(function (_ref) {\n    var data = _ref.data;\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [103.447303, 31.753574],\n        zoom: 7,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'lng',\n          y: 'lat'\n        }\n      },\n      color: {\n        field: 'mag',\n        value: ['#82cf9c', '#10b3b0', '#2033ab'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      size: {\n        field: 'mag',\n        value: function value(_ref2) {\n          var mag = _ref2.mag;\n          return (mag - 4.3) * 10;\n        }\n      },\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      autoFit: true,\n      zoom: {\n        position: 'topright'\n      },\n      scale: {\n        position: 'bottomright'\n      },\n      tooltip: {\n        items: ['title', 'mag', 'depth']\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Bubble Map","order":200},"zh":{"title":"气泡图","order":200}}},{"relativePath":"dot/dot-density/demo/beijing-traffic.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/dot-density/demo/beijing-traffic.ts","order":1,"filename":"beijing-traffic.ts","title":{"zh":"10万辆北京公共交通车辆","en":"100000 Beijing public transport vehicles"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/zkZZmhfMei/ac9d0fb0-283a-46c1-9b6a-c9eeea288bc8.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/8Ps2h%24qgmk/traffic_110000.csv')\n  .then((response) => response.text())\n  .then((data) => {\n    const colors = ['#c57f34', '#cbfddf', '#edea70', '#8cc9f1', '#2c7bb6'];\n\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.417463, 40.015175],\n        pitch: 0,\n        zoom: 9,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          y: 'lat',\n          x: 'lng',\n        },\n      },\n      shape: 'dot',\n      color: {\n        field: 'type',\n        value: ({ type }) => {\n          switch (parseInt(type)) {\n            case 3:\n              return colors[0];\n            case 4:\n              return colors[1];\n            case 41:\n              return colors[2];\n            case 5:\n              return colors[3];\n            default:\n              return colors[4];\n          }\n        },\n      },\n      size: 0.5,\n      style: {\n        opacity: 1,\n      },\n      autoFit: true,\n      zoom: {\n        position: 'bottomright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.beijingTraffic = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/8Ps2h%24qgmk/traffic_110000.csv').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    var colors = ['#c57f34', '#cbfddf', '#edea70', '#8cc9f1', '#2c7bb6'];\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.417463, 40.015175],\n        pitch: 0,\n        zoom: 9\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          y: 'lat',\n          x: 'lng'\n        }\n      },\n      shape: 'dot',\n      color: {\n        field: 'type',\n        value: function value(_ref) {\n          var type = _ref.type;\n\n          switch (parseInt(type)) {\n            case 3:\n              return colors[0];\n\n            case 4:\n              return colors[1];\n\n            case 41:\n              return colors[2];\n\n            case 5:\n              return colors[3];\n\n            default:\n              return colors[4];\n          }\n        }\n      },\n      size: 0.5,\n      style: {\n        opacity: 1\n      },\n      autoFit: true,\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Dot Density","order":201},"zh":{"title":"点密度图","order":201}}},{"relativePath":"dot/dot-density/demo/cuisine-nationwide.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/dot-density/demo/cuisine-nationwide.ts","order":0,"filename":"cuisine-nationwide.ts","title":{"zh":"6万点位全国粤菜分布","en":"Distribution of 60000 Cantonese dishes in China"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/RO8qymvsqT/447d85e6-7b2f-4344-b3c5-265db3cf4633.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/fZreT5RyVT/6wanquanguoyuecaidefenbu.geojson')\n  .then((response) => response.json())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [105.425968, 35.882505],\n        pitch: 0,\n        zoom: 4,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      shape: 'dot',\n      color: '#3C1FA8',\n      size: 0.5,\n      style: {\n        opacity: 1,\n      },\n      autoFit: true,\n      zoom: {\n        position: 'bottomright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.cuisineNationwide = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/fZreT5RyVT/6wanquanguoyuecaidefenbu.geojson').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [105.425968, 35.882505],\n        pitch: 0,\n        zoom: 4\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      shape: 'dot',\n      color: '#3C1FA8',\n      size: 0.5,\n      style: {\n        opacity: 1\n      },\n      autoFit: true,\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Dot Density","order":201},"zh":{"title":"点密度图","order":201}}},{"relativePath":"dot/dot-density/demo/shanghai-traffic.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/dot-density/demo/shanghai-traffic.ts","order":2,"filename":"shanghai-traffic.ts","title":{"zh":"164万辆上海市交通车辆","en":"1.64 million traffic vehicles in Shanghai"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/t5BQDH5Jp8/dbcddc7e-5ff9-4d3b-af9b-2d86f40b626a.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/rmsportal/BElVQFEFvpAKzddxFZxJ.txt')\n  .then((response) => response.text())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [121.417463, 31.215175],\n        pitch: 0,\n        zoom: 11,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          y: 'lat',\n          x: 'lng',\n        },\n      },\n      shape: 'dot',\n      color: '#080298',\n      size: 0.5,\n      style: {\n        opacity: 1,\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      scale: {\n        position: 'bottomleft',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.shanghaiTraffic = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/rmsportal/BElVQFEFvpAKzddxFZxJ.txt').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [121.417463, 31.215175],\n        pitch: 0,\n        zoom: 11\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          y: 'lat',\n          x: 'lng'\n        }\n      },\n      shape: 'dot',\n      color: '#080298',\n      size: 0.5,\n      style: {\n        opacity: 1\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      scale: {\n        position: 'bottomleft'\n      },\n      layerMenu: {\n        position: 'topright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Dot Density","order":201},"zh":{"title":"点密度图","order":201}}},{"relativePath":"dot/icon/demo/bank.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/icon/demo/bank.ts","order":0,"filename":"bank.ts","title":{"zh":"银行网点","en":"Bank outlets"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/zWvhGhbuTY/08a0857b-814b-4165-b787-b375d73a5b6c.png","source":"import { Dot, registerImages } from '@antv/l7plot';\n\nconst images = [\n  { id: '160104', image: 'https://gw.alipayobjects.com/zos/antfincdn/tWx6gaMr9P/zhongguoyinhang.png' },\n  { id: '160139', image: 'https://gw.alipayobjects.com/zos/antfincdn/KDjael3M3h/youzhengyinhang.png' },\n  { id: '160105', image: 'https://gw.alipayobjects.com/zos/antfincdn/Cxwxb%265wn7/gongshangyinhang.png' },\n  { id: '160106', image: 'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg' },\n  { id: '160107', image: 'https://gw.alipayobjects.com/zos/antfincdn/hITtoj%2672C/nongyeyinhang.png' },\n  { id: '160108', image: 'https://gw.alipayobjects.com/zos/antfincdn/KHWJyfcPJu/jiaotongyinhang.png' },\n  { id: '160109', image: 'https://gw.alipayobjects.com/zos/antfincdn/%247VfhYcrfu/zhaoshangyinhang.png' },\n  { id: '160111', image: 'https://gw.alipayobjects.com/zos/antfincdn/pgo8%261emOy/guangdayinhang.png' },\n];\nregisterImages(images);\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/h%26vOn55UIF/yinhangwangdian.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.473168, 39.993015],\n        zoom: 15,\n        pitch: 0,\n      },\n      source: {\n        data: data.list,\n        parser: {\n          type: 'json',\n          coordinates: 'location',\n        },\n      },\n      color: '#fff',\n      shape: {\n        field: 'typecode',\n        value: ({ typecode }) => typecode,\n      },\n      size: 10,\n      tooltip: {\n        items: ['name', 'address', 'tel'],\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.bank = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  var images = [{\n    id: '160104',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/tWx6gaMr9P/zhongguoyinhang.png'\n  }, {\n    id: '160139',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/KDjael3M3h/youzhengyinhang.png'\n  }, {\n    id: '160105',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/Cxwxb%265wn7/gongshangyinhang.png'\n  }, {\n    id: '160106',\n    image: 'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg'\n  }, {\n    id: '160107',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/hITtoj%2672C/nongyeyinhang.png'\n  }, {\n    id: '160108',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/KHWJyfcPJu/jiaotongyinhang.png'\n  }, {\n    id: '160109',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/%247VfhYcrfu/zhaoshangyinhang.png'\n  }, {\n    id: '160111',\n    image: 'https://gw.alipayobjects.com/zos/antfincdn/pgo8%261emOy/guangdayinhang.png'\n  }];\n  (0, _l7plot.registerImages)(images);\n  fetch('https://gw.alipayobjects.com/os/antfincdn/h%26vOn55UIF/yinhangwangdian.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.473168, 39.993015],\n        zoom: 15,\n        pitch: 0\n      },\n      source: {\n        data: data.list,\n        parser: {\n          type: 'json',\n          coordinates: 'location'\n        }\n      },\n      color: '#fff',\n      shape: {\n        field: 'typecode',\n        value: function value(_ref) {\n          var typecode = _ref.typecode;\n          return typecode;\n        }\n      },\n      size: 10,\n      tooltip: {\n        items: ['name', 'address', 'tel']\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Icon Map","order":201},"zh":{"title":"图标图","order":201}}},{"relativePath":"dot/icon/demo/poi.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/icon/demo/poi.ts","order":1,"filename":"poi.ts","title":{"zh":"POI 图标","en":"POI Icon"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/cfT2Jb1Fi2/83261ea9-3ccc-4684-a47a-721343c0279b.png","source":"import { Dot, registerImages } from '@antv/l7plot';\n\nconst images = [\n  { id: '01', image: 'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg' },\n  { id: '02', image: 'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg' },\n  { id: '03', image: 'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg' },\n];\nregisterImages(images);\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/893d1d5f-11d9-45f3-8322-ee9140d288ae.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [121.409765, 31.256735],\n        zoom: 14.5,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'longitude',\n          y: 'latitude',\n        },\n      },\n      color: '#fff',\n      shape: {\n        field: 'name',\n        value: ['01', '02', '03'],\n      },\n      size: 20,\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.poi = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  var images = [{\n    id: '01',\n    image: 'https://gw.alipayobjects.com/zos/basement_prod/604b5e7f-309e-40db-b95b-4fac746c5153.svg'\n  }, {\n    id: '02',\n    image: 'https://gw.alipayobjects.com/zos/basement_prod/30580bc9-506f-4438-8c1a-744e082054ec.svg'\n  }, {\n    id: '03',\n    image: 'https://gw.alipayobjects.com/zos/basement_prod/7aa1f460-9f9f-499f-afdf-13424aa26bbf.svg'\n  }];\n  (0, _l7plot.registerImages)(images);\n  fetch('https://gw.alipayobjects.com/os/basement_prod/893d1d5f-11d9-45f3-8322-ee9140d288ae.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [121.409765, 31.256735],\n        zoom: 14.5,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'longitude',\n          y: 'latitude'\n        }\n      },\n      color: '#fff',\n      shape: {\n        field: 'name',\n        value: ['01', '02', '03']\n      },\n      size: 20\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Icon Map","order":201},"zh":{"title":"图标图","order":201}}},{"relativePath":"dot/scatter/demo/classified-scatter.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/scatter/demo/classified-scatter.ts","order":1,"filename":"classified-scatter.ts","title":{"zh":"分类散点","en":"Classified Scatter Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/u31zxgii2R/d3fe9e5f-feb6-4b32-8237-4d79ae99a906.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/6c4bb5f2-850b-419d-afc4-e46032fc9f94.csv')\n  .then((response) => response.text())\n  .then((data) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [-121.24357, 37.58264],\n        pitch: 0,\n        zoom: 6.45,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'Longitude',\n          y: 'Latitude',\n        },\n      },\n      color: {\n        field: 'Magnitude',\n        value: [\n          '#0A3663',\n          '#1558AC',\n          '#3771D9',\n          '#4D89E5',\n          '#64A5D3',\n          '#72BED6',\n          '#83CED6',\n          '#A6E1E0',\n          '#B8EFE2',\n          '#D7F9F0',\n        ],\n      },\n      size: 3,\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0,\n      },\n      state: { active: { color: '#FFF684' } },\n      label: {\n        visible: false,\n        field: 'Magnitude',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'top',\n          textOffset: [0, 20],\n          padding: [10, 10],\n        },\n      },\n      tooltip: {\n        items: ['Magnitude'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.classifiedScatter = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/6c4bb5f2-850b-419d-afc4-e46032fc9f94.csv').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [-121.24357, 37.58264],\n        pitch: 0,\n        zoom: 6.45\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'Longitude',\n          y: 'Latitude'\n        }\n      },\n      color: {\n        field: 'Magnitude',\n        value: ['#0A3663', '#1558AC', '#3771D9', '#4D89E5', '#64A5D3', '#72BED6', '#83CED6', '#A6E1E0', '#B8EFE2', '#D7F9F0']\n      },\n      size: 3,\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      label: {\n        visible: false,\n        field: 'Magnitude',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'top',\n          textOffset: [0, 20],\n          padding: [10, 10]\n        }\n      },\n      tooltip: {\n        items: ['Magnitude']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Scatter","order":200},"zh":{"title":"散点图","order":200}}},{"relativePath":"dot/scatter/demo/distribution-cities.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/dot/scatter/demo/distribution-cities.ts","order":0,"filename":"distribution-cities.ts","title":{"zh":"全国城市与区县分布","en":"Distribution of cities, districts and counties in China"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/TKxay5%26lpP/c01e799b-85f2-4dd1-8126-4c5d6845c522.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/g5hIthhKlr/quanguoshixianweizhi.json')\n  .then((response) => response.json())\n  .then(({ list }) => {\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        zoom: 5,\n        center: [107.4976, 32.1697],\n        pitch: 0,\n      },\n      source: {\n        data: list,\n        parser: {\n          type: 'json',\n          coordinates: 'lnglat',\n        },\n      },\n      size: 4,\n      color: {\n        field: 'style',\n        value: ({ style }) => {\n          if (style == 0) {\n            return '#14B4C9';\n          } else if (style == 1) {\n            return '#3771D9';\n          } else {\n            return '#B8EFE2';\n          }\n        },\n      },\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0,\n      },\n      state: { active: { color: '#FFF684' } },\n      label: {\n        visible: false,\n        field: 'name',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'top',\n          textOffset: [0, 20],\n          padding: [10, 10],\n        },\n      },\n      tooltip: {\n        items: ['name'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n      legend: {\n        type: 'category',\n        position: 'bottomleft',\n        items: [\n          { color: '#14B4C9', value: '地级市' },\n          { color: '#3771D9', value: '县城市' },\n          { color: '#B8EFE2', value: '区县' },\n        ],\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.distributionCities = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/g5hIthhKlr/quanguoshixianweizhi.json').then(function (response) {\n    return response.json();\n  }).then(function (_ref) {\n    var list = _ref.list;\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        zoom: 5,\n        center: [107.4976, 32.1697],\n        pitch: 0\n      },\n      source: {\n        data: list,\n        parser: {\n          type: 'json',\n          coordinates: 'lnglat'\n        }\n      },\n      size: 4,\n      color: {\n        field: 'style',\n        value: function value(_ref2) {\n          var style = _ref2.style;\n\n          if (style == 0) {\n            return '#14B4C9';\n          } else if (style == 1) {\n            return '#3771D9';\n          } else {\n            return '#B8EFE2';\n          }\n        }\n      },\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      label: {\n        visible: false,\n        field: 'name',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'top',\n          textOffset: [0, 20],\n          padding: [10, 10]\n        }\n      },\n      tooltip: {\n        items: ['name']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      },\n      legend: {\n        type: 'category',\n        position: 'bottomleft',\n        items: [{\n          color: '#14B4C9',\n          value: '地级市'\n        }, {\n          color: '#3771D9',\n          value: '县城市'\n        }, {\n          color: '#B8EFE2',\n          value: '区县'\n        }]\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Scatter","order":200},"zh":{"title":"散点图","order":200}}},{"relativePath":"flow/flow/demo/fly-flow.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/flow/flow/demo/fly-flow.ts","order":1,"filename":"fly-flow.ts","title":{"zh":"飞线流向图","en":"Fly flow map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/CHihJw0kuI/c4144d36-fd67-4138-950a-28ffe2f3c2ef.png","source":"import { Flow } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/SIybYh6xr1/arc.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Flow('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.3956, 39.9392],\n        pitch: 45,\n        zoom: 10,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'x1',\n          y: 'y1',\n          x1: 'x',\n          y1: 'y',\n        },\n      },\n      autoFit: true,\n      shape: 'arc3d',\n      size: 1.5,\n      color: {\n        field: 'count',\n        value: ['rgba(1,124,247,0.9)', 'rgba(230,129,28,0.9)'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 0.8,\n        segmentNumber: 60,\n      },\n      animate: {\n        interval: 2,\n        trailLength: 1,\n        duration: 2,\n      },\n      radiation: {\n        color: 'white',\n        size: 30,\n      },\n      label: {\n        visible: true,\n        field: 'count',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 2,\n          textAllowOverlap: false,\n          padding: [5, 5],\n          textOffset: [0, 35],\n        },\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      scale: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.flyFlow = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/SIybYh6xr1/arc.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Flow('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.3956, 39.9392],\n        pitch: 45,\n        zoom: 10\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'x1',\n          y: 'y1',\n          x1: 'x',\n          y1: 'y'\n        }\n      },\n      autoFit: true,\n      shape: 'arc3d',\n      size: 1.5,\n      color: {\n        field: 'count',\n        value: ['rgba(1,124,247,0.9)', 'rgba(230,129,28,0.9)'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 0.8,\n        segmentNumber: 60\n      },\n      animate: {\n        interval: 2,\n        trailLength: 1,\n        duration: 2\n      },\n      radiation: {\n        color: 'white',\n        size: 30\n      },\n      label: {\n        visible: true,\n        field: 'count',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 2,\n          textAllowOverlap: false,\n          padding: [5, 5],\n          textOffset: [0, 35]\n        }\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      scale: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Flow Map","order":500},"zh":{"title":"流向图","order":500}}},{"relativePath":"flow/flow/demo/ground-flow.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/flow/flow/demo/ground-flow.ts","order":0,"filename":"ground-flow.ts","title":{"zh":"贴地流向图","en":"Ground flow map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/%26fdYw4HPc2/dcc23314-d910-4887-998a-ed5470bbb7d0.png","source":"import { Flow } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/SIybYh6xr1/arc.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Flow('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'x1',\n          y: 'y1',\n          x1: 'x',\n          y1: 'y',\n        },\n      },\n      autoFit: true,\n      shape: 'arc',\n      size: 1.5,\n      color: {\n        field: 'count',\n        value: ['rgba(1,124,247,0.9)', 'rgba(230,129,28,0.9)'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 0.8,\n        segmentNumber: 60,\n      },\n      animate: {\n        interval: 2,\n        trailLength: 1,\n        duration: 2,\n      },\n      radiation: {\n        color: 'white',\n        size: 30,\n      },\n      label: {\n        visible: true,\n        field: 'count',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 2,\n          textAllowOverlap: false,\n          padding: [5, 5],\n          textOffset: [0, 35],\n        },\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      scale: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.groundFlow = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/SIybYh6xr1/arc.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Flow('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          x: 'x1',\n          y: 'y1',\n          x1: 'x',\n          y1: 'y'\n        }\n      },\n      autoFit: true,\n      shape: 'arc',\n      size: 1.5,\n      color: {\n        field: 'count',\n        value: ['rgba(1,124,247,0.9)', 'rgba(230,129,28,0.9)'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 0.8,\n        segmentNumber: 60\n      },\n      animate: {\n        interval: 2,\n        trailLength: 1,\n        duration: 2\n      },\n      radiation: {\n        color: 'white',\n        size: 30\n      },\n      label: {\n        visible: true,\n        field: 'count',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 2,\n          textAllowOverlap: false,\n          padding: [5, 5],\n          textOffset: [0, 35]\n        }\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      scale: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Flow Map","order":500},"zh":{"title":"流向图","order":500}}},{"relativePath":"gallery/distribution/demo/global-earthquake.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/gallery/distribution/demo/global-earthquake.ts","order":1,"filename":"global-earthquake.ts","title":{"zh":"全球地震数据等级与深度","en":"Global earthquake data level and depth"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/kDRYz0hAqk/88b8ee59-de23-4c49-becb-a80354adaaee.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/uvnCDHPafR/quanqiudizhenshuju.json')\n  .then((response) => response.json())\n  .then((data) => {\n    const depthColors = ['#D60352', '#F86615', '#F86615', '#F86615', '#F86615'];\n\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [18.159446, 6.547895],\n        zoom: 2,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: { type: 'geojson' },\n      },\n      color: {\n        field: 'depth',\n        value: ({ depth }) => {\n          const index = ~~((depth / 120) * depthColors.length) % depthColors.length;\n          return depthColors[index];\n        },\n      },\n      size: {\n        field: 'level',\n        value: ({ level }) => {\n          if (level < 7) {\n            return level / 2;\n          }\n          return level;\n        },\n      },\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0,\n      },\n      state: { active: true },\n      label: {\n        visible: false,\n        field: 'level',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'center',\n          padding: [10, 10],\n        },\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      scale: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n      tooltip: {\n        items: [\n          { field: 'addr', alias: 'addr' },\n          { field: 'level', alias: 'level' },\n          { field: 'depth', alias: 'depth' },\n        ],\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.globalEarthquake = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/uvnCDHPafR/quanqiudizhenshuju.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var depthColors = ['#D60352', '#F86615', '#F86615', '#F86615', '#F86615'];\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [18.159446, 6.547895],\n        zoom: 2,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      color: {\n        field: 'depth',\n        value: function value(_ref) {\n          var depth = _ref.depth;\n          var index = ~~(depth / 120 * depthColors.length) % depthColors.length;\n          return depthColors[index];\n        }\n      },\n      size: {\n        field: 'level',\n        value: function value(_ref2) {\n          var level = _ref2.level;\n\n          if (level < 7) {\n            return level / 2;\n          }\n\n          return level;\n        }\n      },\n      style: {\n        opacity: 0.8,\n        strokeWidth: 0\n      },\n      state: {\n        active: true\n      },\n      label: {\n        visible: false,\n        field: 'level',\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAnchor: 'center',\n          padding: [10, 10]\n        }\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      scale: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      },\n      tooltip: {\n        items: [{\n          field: 'addr',\n          alias: 'addr'\n        }, {\n          field: 'level',\n          alias: 'level'\n        }, {\n          field: 'depth',\n          alias: 'depth'\n        }]\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Spatial distribution","order":100},"zh":{"title":"空间分布","order":100}}},{"relativePath":"gallery/distribution/demo/population-gdp.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/gallery/distribution/demo/population-gdp.ts","order":0,"filename":"population-gdp.ts","title":{"zh":"中国城市人口数量及GDP排行","en":"China's urban population and GDP ranking"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/VbC9OPwdNg/8bf7bd3f-2479-4228-b04b-4cb38af1d7af.png","source":"import { Dot } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/UvXSmhbwQx/zhongguochengshirenkoushuliangjiGDPpaihang.json')\n  .then((response) => response.json())\n  .then((data) => {\n    const colors = [\n      'rgba(254,255,198,0.95)',\n      'rgba(255,238,149,0.95)',\n      'rgba(255,217,99,0.95)',\n      'rgba(255,175,43,0.95)',\n      'rgba(255,135,24,0.95)',\n      'rgba(234,10,0,0.95)',\n      'rgba(195,0,0,0.95)',\n      'rgba(139,0,0,0.95)',\n    ];\n\n    new Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [102.601, 37.32],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: { type: 'geojson' },\n      },\n      color: {\n        field: 'PerCapitaGDP',\n        value: ({ PerCapitaGDP }) => {\n          const index = Math.min(7, ~~(PerCapitaGDP / 10000));\n          return colors[index];\n        },\n      },\n      size: {\n        field: 'population',\n        value: ({ population }) => population / 80,\n      },\n      style: {\n        opacity: 1,\n        strokeWidth: 0,\n      },\n      state: { active: { color: '#1EA7FD' } },\n      tooltip: {\n        items: [\n          { field: '名称', alias: '名称' },\n          { field: 'PerCapitaGDP', alias: '人均GDP' },\n          { field: 'population', alias: '人口' },\n        ],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.populationGdp = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/UvXSmhbwQx/zhongguochengshirenkoushuliangjiGDPpaihang.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var colors = ['rgba(254,255,198,0.95)', 'rgba(255,238,149,0.95)', 'rgba(255,217,99,0.95)', 'rgba(255,175,43,0.95)', 'rgba(255,135,24,0.95)', 'rgba(234,10,0,0.95)', 'rgba(195,0,0,0.95)', 'rgba(139,0,0,0.95)'];\n    new _l7plot.Dot('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [102.601, 37.32],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      color: {\n        field: 'PerCapitaGDP',\n        value: function value(_ref) {\n          var PerCapitaGDP = _ref.PerCapitaGDP;\n          var index = Math.min(7, ~~(PerCapitaGDP / 10000));\n          return colors[index];\n        }\n      },\n      size: {\n        field: 'population',\n        value: function value(_ref2) {\n          var population = _ref2.population;\n          return population / 80;\n        }\n      },\n      style: {\n        opacity: 1,\n        strokeWidth: 0\n      },\n      state: {\n        active: {\n          color: '#1EA7FD'\n        }\n      },\n      tooltip: {\n        items: [{\n          field: '名称',\n          alias: '名称'\n        }, {\n          field: 'PerCapitaGDP',\n          alias: '人均GDP'\n        }, {\n          field: 'population',\n          alias: '人口'\n        }]\n      },\n      zoom: {\n        position: 'bottomright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Spatial distribution","order":100},"zh":{"title":"空间分布","order":100}}},{"relativePath":"heat/grid/demo/grid2d.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/grid/demo/grid2d.ts","order":0,"filename":"grid2d.ts","title":{"zh":"网格热力 2D","en":"Grid thermal 2D"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/fKPFt8cFk4/a091a42a-2411-4011-9dc7-ef7d39197f8d.png","source":"import { Grid } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/aBQAMIpvPL/qingdao_500m.csv')\n  .then((response) => response.text())\n  .then((data) => {\n    new Grid('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 0,\n        zoom: 8.6,\n        center: [120.198254, 36.265551],\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'lng',\n          y: 'lat',\n        },\n        aggregation: {\n          radius: 1000,\n          field: 'count',\n          method: 'sum',\n        },\n      },\n      shape: 'square',\n      color: {\n        field: 'count',\n        value: ['#0868AC', '#43A2CA', '#43A2CA', '#7BCCC4', '#BAE4BC', '#F0F9E8', '#F0F9E8'],\n      },\n      style: {\n        coverage: 0.9,\n        angle: 0,\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.grid2d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/aBQAMIpvPL/qingdao_500m.csv').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    new _l7plot.Grid('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 0,\n        zoom: 8.6,\n        center: [120.198254, 36.265551]\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'lng',\n          y: 'lat'\n        },\n        aggregation: {\n          radius: 1000,\n          field: 'count',\n          method: 'sum'\n        }\n      },\n      shape: 'square',\n      color: {\n        field: 'count',\n        value: ['#0868AC', '#43A2CA', '#43A2CA', '#7BCCC4', '#BAE4BC', '#F0F9E8', '#F0F9E8']\n      },\n      style: {\n        coverage: 0.9,\n        angle: 0\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Grid","order":301},"zh":{"title":"网格聚合图","order":301}}},{"relativePath":"heat/grid/demo/grid3d.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/grid/demo/grid3d.ts","order":1,"filename":"grid3d.ts","title":{"zh":"网格热力 3D","en":"Grid thermal 3D"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/XPitK0Ftor/9dcf6d62-ffc1-4207-9bb6-1f52fbc93002.png","source":"import { Grid } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/7359a5e9-3c5e-453f-b207-bc892fb23b84.csv')\n  .then((response) => response.text())\n  .then((data) => {\n    new Grid('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 48,\n        center: [109.054293, 29.246265],\n        zoom: 6,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'lng',\n          y: 'lat',\n        },\n        aggregation: {\n          radius: 20000,\n          field: 'v',\n          method: 'sum',\n        },\n      },\n\n      shape: 'squareColumn',\n      size: {\n        field: 'count',\n        value: ({ count }) => {\n          return count * 200;\n        },\n      },\n      color: {\n        field: 'count',\n        value: [\n          '#8C1EB2',\n          '#8C1EB2',\n          '#DA05AA',\n          '#F0051A',\n          '#FF2A3C',\n          '#FF4818',\n          '#FF4818',\n          '#FF8B18',\n          '#F77B00',\n          '#ED9909',\n          '#ECC357',\n          '#EDE59C',\n        ].reverse(),\n      },\n      style: {\n        coverage: 0.9,\n        angle: 0,\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.grid3d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/7359a5e9-3c5e-453f-b207-bc892fb23b84.csv').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    new _l7plot.Grid('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 48,\n        center: [109.054293, 29.246265],\n        zoom: 6\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'lng',\n          y: 'lat'\n        },\n        aggregation: {\n          radius: 20000,\n          field: 'v',\n          method: 'sum'\n        }\n      },\n      shape: 'squareColumn',\n      size: {\n        field: 'count',\n        value: function value(_ref) {\n          var count = _ref.count;\n          return count * 200;\n        }\n      },\n      color: {\n        field: 'count',\n        value: ['#8C1EB2', '#8C1EB2', '#DA05AA', '#F0051A', '#FF2A3C', '#FF4818', '#FF4818', '#FF8B18', '#F77B00', '#ED9909', '#ECC357', '#EDE59C'].reverse()\n      },\n      style: {\n        coverage: 0.9,\n        angle: 0\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Grid","order":301},"zh":{"title":"网格聚合图","order":301}}},{"relativePath":"heat/heatmap/demo/global-2d.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/heatmap/demo/global-2d.ts","order":2,"filename":"global-2d.ts","title":{"zh":"全球热力","en":"Global heat map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/svqQmzIKVw/2977de7d-6362-42f1-b731-05e734b6bfe0.png","source":"import { Heatmap } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [127.5671666579043, 7.445038892195569],\n        zoom: 2.632456779444394,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      size: {\n        field: 'mag',\n      },\n      style: {\n        intensity: 3,\n        radius: 20,\n        opacity: 1,\n        colorsRamp: [\n          { color: '#206C7C', position: 0 },\n          { color: '#2EA9A1 ', position: 0.2 },\n          { color: '#91EABC', position: 0.4 },\n          { color: '#FFF598', position: 0.6 },\n          { color: '#F7B74A', position: 0.8 },\n          { color: '#FF4818', position: 1 },\n        ],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.global2d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [127.5671666579043, 7.445038892195569],\n        zoom: 2.632456779444394,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      size: {\n        field: 'mag'\n      },\n      style: {\n        intensity: 3,\n        radius: 20,\n        opacity: 1,\n        colorsRamp: [{\n          color: '#206C7C',\n          position: 0\n        }, {\n          color: '#2EA9A1 ',\n          position: 0.2\n        }, {\n          color: '#91EABC',\n          position: 0.4\n        }, {\n          color: '#FFF598',\n          position: 0.6\n        }, {\n          color: '#F7B74A',\n          position: 0.8\n        }, {\n          color: '#FF4818',\n          position: 1\n        }]\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"zh":{"title":"点热力图","order":300},"en":{"title":"Heatmap","order":300}}},{"relativePath":"heat/heatmap/demo/global-3d.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/heatmap/demo/global-3d.ts","order":3,"filename":"global-3d.ts","title":{"zh":"全球热力 3D","en":"Global 3D heat map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/5osUdJv%24Nq/51c6693d-e00a-4c32-adb2-90b95359d4f2.png","source":"import { Heatmap } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [127.5671666579043, 7.445038892195569],\n        zoom: 2.632456779444394,\n        pitch: 45,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      shape: 'heatmap3D',\n      size: {\n        field: 'mag',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.global3d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/d3564b06-670f-46ea-8edb-842f7010a7c6.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [127.5671666579043, 7.445038892195569],\n        zoom: 2.632456779444394,\n        pitch: 45\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      shape: 'heatmap3D',\n      size: {\n        field: 'mag'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"zh":{"title":"点热力图","order":300},"en":{"title":"Heatmap","order":300}}},{"relativePath":"heat/heatmap/demo/housing-transaction.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/heatmap/demo/housing-transaction.ts","order":0,"filename":"housing-transaction.ts","title":{"zh":"杭州房屋交易量","en":"Hangzhou housing transaction volume"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/qgKi3OxQVE/4553729d-c2ce-490b-aebb-ea948bef7f2e.png","source":"import { Heatmap } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/S2Pb%26549sG/20210723023614.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        zoom: 11.7,\n        center: [120.19660949707033, 30.234747338474293],\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      size: {\n        field: 'count',\n        value: [0, 1],\n      },\n      style: {\n        intensity: 2,\n        radius: 15,\n        opacity: 1,\n        colorsRamp: [\n          { color: 'rgba(33,102,172,0.0)', position: 0 },\n          { color: 'rgb(103,169,207)', position: 0.2 },\n          { color: 'rgb(209,229,240)', position: 0.4 },\n          { color: 'rgb(253,219,199)', position: 0.6 },\n          { color: 'rgb(239,138,98)', position: 0.8 },\n          { color: 'rgb(178,24,43,1.0)', position: 1 },\n        ],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.housingTransaction = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/S2Pb%26549sG/20210723023614.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        zoom: 11.7,\n        center: [120.19660949707033, 30.234747338474293],\n        pitch: 0\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      size: {\n        field: 'count',\n        value: [0, 1]\n      },\n      style: {\n        intensity: 2,\n        radius: 15,\n        opacity: 1,\n        colorsRamp: [{\n          color: 'rgba(33,102,172,0.0)',\n          position: 0\n        }, {\n          color: 'rgb(103,169,207)',\n          position: 0.2\n        }, {\n          color: 'rgb(209,229,240)',\n          position: 0.4\n        }, {\n          color: 'rgb(253,219,199)',\n          position: 0.6\n        }, {\n          color: 'rgb(239,138,98)',\n          position: 0.8\n        }, {\n          color: 'rgb(178,24,43,1.0)',\n          position: 1\n        }]\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"zh":{"title":"点热力图","order":300},"en":{"title":"Heatmap","order":300}}},{"relativePath":"heat/heatmap/demo/traffic-accident.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/heatmap/demo/traffic-accident.ts","order":1,"filename":"traffic-accident.ts","title":{"zh":"全国交通事故增长率","en":"National traffic accident growth rate"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/HRChB6ZKXz/343063e1-afbc-4fb1-a5d7-0383be3d28b3.png","source":"import { Heatmap } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/OOSGL1vhp3/20200726024229.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [127.5671666579043, 7.445038892195569],\n        zoom: 2.632456779444394,\n        pitch: 45,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n      },\n      shape: 'heatmap3D',\n      size: {\n        field: 'avg',\n        value: ({ avg }) => avg / 100,\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.trafficAccident = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/OOSGL1vhp3/20200726024229.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Heatmap('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        center: [127.5671666579043, 7.445038892195569],\n        zoom: 2.632456779444394,\n        pitch: 45\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        }\n      },\n      shape: 'heatmap3D',\n      size: {\n        field: 'avg',\n        value: function value(_ref) {\n          var avg = _ref.avg;\n          return avg / 100;\n        }\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});","postFrontmatter":{"zh":{"title":"点热力图","order":300},"en":{"title":"Heatmap","order":300}}},{"relativePath":"heat/hexbin/demo/hexbin3d.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/hexbin/demo/hexbin3d.ts","order":1,"filename":"hexbin3d.ts","title":{"zh":"蜂窝热力 3D","en":"Hexbin thermal 3D"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/fA50QqeP%24T/a5031ad0-7786-4183-bf23-e66dbdf52fe5.png","source":"import { Hexbin } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/a1a8158d-6fe3-424b-8e50-694ccf61c4d7.csv')\n  .then((response) => response.text())\n  .then((data) => {\n    new Hexbin('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 43,\n        center: [120.13383079335335, 29.9],\n        zoom: 8.2,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'lng',\n          y: 'lat',\n        },\n        aggregation: {\n          field: 'v',\n          radius: 2500,\n          method: 'sum',\n        },\n      },\n      shape: 'hexagonColumn',\n      size: {\n        field: 'sum',\n        value: ({ sum }) => {\n          return sum * 200;\n        },\n      },\n      color: {\n        field: 'sum',\n        value: [\n          '#094D4A',\n          '#146968',\n          '#1D7F7E',\n          '#289899',\n          '#34B6B7',\n          '#4AC5AF',\n          '#5FD3A6',\n          '#7BE39E',\n          '#A1EDB8',\n          '#C3F9CC',\n          '#DEFAC0',\n          '#ECFFB1',\n        ],\n      },\n      style: {\n        coverage: 0.8,\n        angle: 0,\n        opacity: 1.0,\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.hexbin3d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/a1a8158d-6fe3-424b-8e50-694ccf61c4d7.csv').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    new _l7plot.Hexbin('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 43,\n        center: [120.13383079335335, 29.9],\n        zoom: 8.2\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'csv',\n          x: 'lng',\n          y: 'lat'\n        },\n        aggregation: {\n          field: 'v',\n          radius: 2500,\n          method: 'sum'\n        }\n      },\n      shape: 'hexagonColumn',\n      size: {\n        field: 'sum',\n        value: function value(_ref) {\n          var sum = _ref.sum;\n          return sum * 200;\n        }\n      },\n      color: {\n        field: 'sum',\n        value: ['#094D4A', '#146968', '#1D7F7E', '#289899', '#34B6B7', '#4AC5AF', '#5FD3A6', '#7BE39E', '#A1EDB8', '#C3F9CC', '#DEFAC0', '#ECFFB1']\n      },\n      style: {\n        coverage: 0.8,\n        angle: 0,\n        opacity: 1.0\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Hexbin","order":302},"zh":{"title":"蜂窝聚合图","order":302}}},{"relativePath":"heat/hexbin/demo/traffic-delay.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/heat/hexbin/demo/traffic-delay.ts","order":0,"filename":"traffic-delay.ts","title":{"zh":"杭州交通高峰期路口延误指数","en":"Intersection delay index in traffic peak in Hangzhou"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/7W1VDrMpy%24/63f536b0-244a-41e9-9698-c3249a2108a7.png","source":"import { Hexbin } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/Ml2DwikvFC/20210726100731.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Hexbin('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 43,\n        center: [120.13383079335335, 29.9],\n        zoom: 8.2,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson',\n        },\n        aggregation: {\n          radius: 1200,\n          field: 'rank',\n          method: 'sum',\n        },\n      },\n\n      shape: 'hexagonColumn',\n      size: {\n        field: 'sum',\n        value: ({ sum }) => {\n          return sum * 10;\n        },\n      },\n      color: {\n        field: 'sum',\n        value: ['#0553A1', '#0B79B0', '#10B3B0', '#7CCF98', '#DCE872'],\n      },\n      style: {\n        coverage: 0.8,\n        angle: 0,\n        opacity: 1.0,\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.trafficDelay = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/Ml2DwikvFC/20210726100731.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Hexbin('container', {\n      map: {\n        type: 'mapbox',\n        style: 'dark',\n        pitch: 43,\n        center: [120.13383079335335, 29.9],\n        zoom: 8.2\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'geojson'\n        },\n        aggregation: {\n          radius: 1200,\n          field: 'rank',\n          method: 'sum'\n        }\n      },\n      shape: 'hexagonColumn',\n      size: {\n        field: 'sum',\n        value: function value(_ref) {\n          var sum = _ref.sum;\n          return sum * 10;\n        }\n      },\n      color: {\n        field: 'sum',\n        value: ['#0553A1', '#0B79B0', '#10B3B0', '#7CCF98', '#DCE872']\n      },\n      style: {\n        coverage: 0.8,\n        angle: 0,\n        opacity: 1.0\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Hexbin","order":302},"zh":{"title":"蜂窝聚合图","order":302}}},{"relativePath":"path/path/demo/beijingBusPath.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/path/path/demo/beijingBusPath.ts","order":0,"filename":"beijingBusPath.ts","title":{"zh":"北京公交线路","en":"Beijing Bus Path"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/lvcKgkC21g/f5fed9c1-0bc3-4c96-a05a-0ac98dc396a6.png","source":"import { Path } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/1atwIMvcMo/beijinggongjiaoluxian.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'lnglat',\n        },\n      },\n      size: 1,\n      color: {\n        field: 'line_name',\n        value: ['#5B8FF9', '#5CCEA1', '#5D7092'],\n      },\n      style: {\n        opacity: 0.8,\n      },\n      state: { active: { color: '#FFF684' } },\n      autoFit: true,\n      tooltip: {\n        items: ['line_name', 'line_id'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.beijingBusPath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/1atwIMvcMo/beijinggongjiaoluxian.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'lnglat'\n        }\n      },\n      size: 1,\n      color: {\n        field: 'line_name',\n        value: ['#5B8FF9', '#5CCEA1', '#5D7092']\n      },\n      style: {\n        opacity: 0.8\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      autoFit: true,\n      tooltip: {\n        items: ['line_name', 'line_id']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Path Map","order":400},"zh":{"title":"路径图","order":400}}},{"relativePath":"path/path/demo/beijingMetro.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/path/path/demo/beijingMetro.ts","order":1,"filename":"beijingMetro.ts","title":{"zh":"北京地铁线","en":"Beijing Metro"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/0BBZcXixuK/ec49b3ab-4f47-42ef-907c-9912a9c3e4ea.png","source":"import { Path } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/0d2f0113-f48b-4db9-8adc-a3937243d5a3.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10,\n      },\n      source: {\n        data: data,\n      },\n      size: 2,\n      color: {\n        field: '标准名称',\n        value: ['#5B8FF9', '#5CCEA1', '#5D7092'],\n      },\n      style: {\n        opacity: 0.8,\n        lineType: 'dash',\n      },\n      state: { active: { color: '#FFF684' } },\n      tooltip: {\n        items: ['标准名称', '分类代码'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.beijingMetro = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/0d2f0113-f48b-4db9-8adc-a3937243d5a3.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10\n      },\n      source: {\n        data: data\n      },\n      size: 2,\n      color: {\n        field: '标准名称',\n        value: ['#5B8FF9', '#5CCEA1', '#5D7092']\n      },\n      style: {\n        opacity: 0.8,\n        lineType: 'dash'\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      tooltip: {\n        items: ['标准名称', '分类代码']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Path Map","order":400},"zh":{"title":"路径图","order":400}}},{"relativePath":"path/path/demo/busLevelRoutes.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/path/path/demo/busLevelRoutes.ts","order":2,"filename":"busLevelRoutes.ts","title":{"zh":"分类公交路线","en":"Bus Level Routes"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/y9%26C49CVvy/72b49289-9325-4836-816e-99560385d698.png","source":"import { Path } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/ee07641d-5490-4768-9826-25862e8019e1.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 45,\n        zoom: 10,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'path',\n        },\n      },\n      size: {\n        field: 'level',\n        value: ({ level }) => {\n          return [0.8, level * 1000];\n        },\n      },\n      color: {\n        field: 'number',\n        value: ['#5B8FF9', '#5CCEA1', '#5D7092'],\n      },\n      style: {\n        opacity: 0.8,\n      },\n      autoFit: true,\n      state: { active: { color: '#FFF684' } },\n      tooltip: {\n        items: ['level', 'number'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.busLevelRoutes = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/basement_prod/ee07641d-5490-4768-9826-25862e8019e1.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 45,\n        zoom: 10\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'path'\n        }\n      },\n      size: {\n        field: 'level',\n        value: function value(_ref) {\n          var level = _ref.level;\n          return [0.8, level * 1000];\n        }\n      },\n      color: {\n        field: 'number',\n        value: ['#5B8FF9', '#5CCEA1', '#5D7092']\n      },\n      style: {\n        opacity: 0.8\n      },\n      autoFit: true,\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      tooltip: {\n        items: ['level', 'number']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Path Map","order":400},"zh":{"title":"路径图","order":400}}},{"relativePath":"path/path/demo/trail.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/path/path/demo/trail.ts","order":3,"filename":"trail.ts","title":{"zh":"轨迹图","en":"trail"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/EQVpMcc11v/ab32657b-2410-4770-99ee-f73f62a4848b.png","source":"import { Path } from '@antv/l7plot';\n\nfetch('https://gw.alipayobjects.com/os/antfincdn/RBklE4pHH3/trail.json')\n  .then((response) => response.json())\n  .then((data) => {\n    new Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10,\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'path',\n        },\n      },\n      size: 1.5,\n      color: '#1CD5FF',\n      style: {\n        opacity: 0.8,\n      },\n      animate: {\n        interval: 0.6, // 间隔\n        trailLength: 2, // 流线长度\n        duration: 2, // 持续时间，延时\n      },\n      state: { active: { color: '#FFF684' } },\n      autoFit: true,\n      zoom: {\n        position: 'bottomright',\n      },\n      layerMenu: {\n        position: 'topright',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.trail = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch('https://gw.alipayobjects.com/os/antfincdn/RBklE4pHH3/trail.json').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    new _l7plot.Path('container', {\n      theme: 'dark',\n      map: {\n        type: 'mapbox',\n        center: [116.3956, 39.9392],\n        pitch: 0,\n        zoom: 10\n      },\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'path'\n        }\n      },\n      size: 1.5,\n      color: '#1CD5FF',\n      style: {\n        opacity: 0.8\n      },\n      animate: {\n        interval: 0.6,\n        // 间隔\n        trailLength: 2,\n        // 流线长度\n        duration: 2 // 持续时间，延时\n\n      },\n      state: {\n        active: {\n          color: '#FFF684'\n        }\n      },\n      autoFit: true,\n      zoom: {\n        position: 'bottomright'\n      },\n      layerMenu: {\n        position: 'topright'\n      }\n    });\n  });\n});","postFrontmatter":{"en":{"title":"Path Map","order":400},"zh":{"title":"路径图","order":400}}}],"exampleSections":{"examples":[{"relativePath":"choropleth/administrative/demo/world-map.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/world-map.ts","order":0,"filename":"world-map.ts","title":{"zh":"世界地图","en":"World Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/wRiG4Cl1tB/9c40912e-13f2-42c6-a580-e86160b35962.png","source":"import { Choropleth } from '@antv/l7plot';\n\nnew Choropleth('container', {\n  map: {\n    type: 'mapbox',\n    style: 'blank',\n    center: [120.19382669582967, 30.258134],\n    zoom: 3,\n    pitch: 0,\n  },\n  source: {\n    data: [\n      { name: '中华人民共和国', value: 200 },\n      { name: '美国', value: 250 },\n      { name: '俄罗斯', value: 180 },\n      { name: '日本', value: 120 },\n      { name: '加拿大', value: 130 },\n      { name: '澳大利亚', value: 130 },\n      { name: '新加坡', value: 170 },\n      { name: '巴西', value: 80 },\n    ],\n    joinBy: {\n      sourceField: 'name',\n      geoField: 'name',\n    },\n  },\n  viewLevel: {\n    level: 'world',\n    adcode: 'all',\n  },\n  autoFit: true,\n  color: {\n    field: 'value',\n    value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n    scale: { type: 'quantize' },\n  },\n  style: {\n    opacity: 1,\n    stroke: '#ccc',\n    lineWidth: 0.6,\n    lineOpacity: 1,\n    fillBottomColor: '#d8d8d84d',\n  },\n  chinaBorder: false,\n  label: {\n    visible: true,\n    field: 'name',\n    style: {\n      fill: '#000',\n      opacity: 0.8,\n      fontSize: 10,\n      stroke: '#fff',\n      strokeWidth: 1.5,\n      textAllowOverlap: false,\n      padding: [5, 5],\n    },\n  },\n  state: {\n    active: true,\n    select: {\n      stroke: 'black',\n      lineWidth: 1.5,\n      lineOpacity: 0.8,\n    },\n  },\n  tooltip: {\n    items: ['name', 'adcode', 'value'],\n  },\n  zoom: {\n    position: 'bottomright',\n  },\n  legend: {\n    position: 'bottomleft',\n  },\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.worldMap = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  new _l7plot.Choropleth('container', {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n      center: [120.19382669582967, 30.258134],\n      zoom: 3,\n      pitch: 0\n    },\n    source: {\n      data: [{\n        name: '中华人民共和国',\n        value: 200\n      }, {\n        name: '美国',\n        value: 250\n      }, {\n        name: '俄罗斯',\n        value: 180\n      }, {\n        name: '日本',\n        value: 120\n      }, {\n        name: '加拿大',\n        value: 130\n      }, {\n        name: '澳大利亚',\n        value: 130\n      }, {\n        name: '新加坡',\n        value: 170\n      }, {\n        name: '巴西',\n        value: 80\n      }],\n      joinBy: {\n        sourceField: 'name',\n        geoField: 'name'\n      }\n    },\n    viewLevel: {\n      level: 'world',\n      adcode: 'all'\n    },\n    autoFit: true,\n    color: {\n      field: 'value',\n      value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n      scale: {\n        type: 'quantize'\n      }\n    },\n    style: {\n      opacity: 1,\n      stroke: '#ccc',\n      lineWidth: 0.6,\n      lineOpacity: 1,\n      fillBottomColor: '#d8d8d84d'\n    },\n    chinaBorder: false,\n    label: {\n      visible: true,\n      field: 'name',\n      style: {\n        fill: '#000',\n        opacity: 0.8,\n        fontSize: 10,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: false,\n        padding: [5, 5]\n      }\n    },\n    state: {\n      active: true,\n      select: {\n        stroke: 'black',\n        lineWidth: 1.5,\n        lineOpacity: 0.8\n      }\n    },\n    tooltip: {\n      items: ['name', 'adcode', 'value']\n    },\n    zoom: {\n      position: 'bottomright'\n    },\n    legend: {\n      position: 'bottomleft'\n    }\n  });\n});"},{"relativePath":"choropleth/administrative/demo/china-map.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/china-map.ts","order":1,"filename":"china-map.ts","title":{"zh":"中国地图","en":"China Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/qSFaP32j8q/4428acf4-9362-4705-90c9-de950be5a177.png","source":"import { Choropleth } from '@antv/l7plot';\n\nconst ProvinceData = [\n  {\n    name: '云南省',\n    code: 530000,\n    value: 17881.12,\n  },\n  {\n    name: '黑龙江省',\n    code: 230000,\n    value: 16361.62,\n  },\n  {\n    name: '贵州省',\n    code: 520000,\n    value: 14806.45,\n  },\n  {\n    name: '北京市',\n    code: 110000,\n    value: 30319.98,\n  },\n  {\n    name: '河北省',\n    code: 130000,\n    value: 36010.27,\n  },\n  {\n    name: '山西省',\n    code: 140000,\n    value: 16818.11,\n  },\n  {\n    name: '吉林省',\n    code: 220000,\n    value: 15074,\n  },\n  {\n    name: '宁夏回族自治区',\n    code: 640000,\n    value: 3705.18,\n  },\n  {\n    name: '辽宁省',\n    code: 210000,\n    value: 25315.35,\n  },\n  {\n    name: '海南省',\n    code: 460000,\n    value: 4832.05,\n  },\n  {\n    name: '内蒙古自治区',\n    code: 150000,\n    value: 17289.22,\n  },\n  {\n    name: '天津市',\n    code: 120000,\n    value: 18809.64,\n  },\n  {\n    name: '新疆维吾尔自治区',\n    code: 650000,\n    value: 12199.08,\n  },\n  {\n    name: '上海市',\n    code: 310000,\n    value: 32679.87,\n  },\n  {\n    name: '陕西省',\n    code: 610000,\n    value: 24438.32,\n  },\n  {\n    name: '甘肃省',\n    code: 620000,\n    value: 8246.07,\n  },\n  {\n    name: '安徽省',\n    code: 340000,\n    value: 30006.82,\n  },\n  {\n    name: '香港特别行政区',\n    code: 810000,\n    value: 0,\n  },\n  {\n    name: '广东省',\n    code: 440000,\n    value: 97277.77,\n  },\n  {\n    name: '河南省',\n    code: 410000,\n    value: 48055.86,\n  },\n  {\n    name: '湖南省',\n    code: 430000,\n    value: 36425.78,\n  },\n  {\n    name: '江西省',\n    code: 360000,\n    value: 21984.78,\n  },\n  {\n    name: '四川省',\n    code: 510000,\n    value: 40678.13,\n  },\n  {\n    name: '广西壮族自治区',\n    code: 450000,\n    value: 20353.51,\n  },\n  {\n    name: '江苏省',\n    code: 320000,\n    value: 92595.4,\n  },\n  {\n    name: '澳门特别行政区',\n    code: 820000,\n    value: null,\n  },\n  {\n    name: '浙江省',\n    code: 330000,\n    value: 56197.15,\n  },\n  {\n    name: '山东省',\n    code: 370000,\n    value: 76469.67,\n  },\n  {\n    name: '青海省',\n    code: 630000,\n    value: 2865.23,\n  },\n  {\n    name: '重庆市',\n    code: 500000,\n    value: 20363.19,\n  },\n  {\n    name: '福建省',\n    code: 350000,\n    value: 35804.04,\n  },\n  {\n    name: '湖北省',\n    code: 420000,\n    value: 39366.55,\n  },\n  {\n    name: '西藏自治区',\n    code: 540000,\n    value: 1477.63,\n  },\n  {\n    name: '台湾省',\n    code: 710000,\n    value: null,\n  },\n];\n\nnew Choropleth('container', {\n  map: {\n    type: 'mapbox',\n    style: 'blank',\n    center: [120.19382669582967, 30.258134],\n    zoom: 3,\n    pitch: 0,\n  },\n  source: {\n    data: ProvinceData,\n    joinBy: {\n      sourceField: 'code',\n      geoField: 'adcode',\n    },\n  },\n  viewLevel: {\n    level: 'country',\n    adcode: 100000,\n  },\n  autoFit: true,\n  color: {\n    field: 'value',\n    value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n    scale: { type: 'quantile' },\n  },\n  style: {\n    opacity: 1,\n    stroke: '#ccc',\n    lineWidth: 0.6,\n    lineOpacity: 1,\n  },\n  label: {\n    visible: true,\n    field: 'name',\n    style: {\n      fill: '#000',\n      opacity: 0.8,\n      fontSize: 10,\n      stroke: '#fff',\n      strokeWidth: 1.5,\n      textAllowOverlap: false,\n      padding: [5, 5],\n    },\n  },\n  state: {\n    active: { stroke: 'black', lineWidth: 1 },\n  },\n  tooltip: {\n    items: ['name', 'adcode', 'value'],\n  },\n  zoom: {\n    position: 'bottomright',\n  },\n  legend: {\n    position: 'bottomleft',\n  },\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chinaMap = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  var ProvinceData = [{\n    name: '云南省',\n    code: 530000,\n    value: 17881.12\n  }, {\n    name: '黑龙江省',\n    code: 230000,\n    value: 16361.62\n  }, {\n    name: '贵州省',\n    code: 520000,\n    value: 14806.45\n  }, {\n    name: '北京市',\n    code: 110000,\n    value: 30319.98\n  }, {\n    name: '河北省',\n    code: 130000,\n    value: 36010.27\n  }, {\n    name: '山西省',\n    code: 140000,\n    value: 16818.11\n  }, {\n    name: '吉林省',\n    code: 220000,\n    value: 15074\n  }, {\n    name: '宁夏回族自治区',\n    code: 640000,\n    value: 3705.18\n  }, {\n    name: '辽宁省',\n    code: 210000,\n    value: 25315.35\n  }, {\n    name: '海南省',\n    code: 460000,\n    value: 4832.05\n  }, {\n    name: '内蒙古自治区',\n    code: 150000,\n    value: 17289.22\n  }, {\n    name: '天津市',\n    code: 120000,\n    value: 18809.64\n  }, {\n    name: '新疆维吾尔自治区',\n    code: 650000,\n    value: 12199.08\n  }, {\n    name: '上海市',\n    code: 310000,\n    value: 32679.87\n  }, {\n    name: '陕西省',\n    code: 610000,\n    value: 24438.32\n  }, {\n    name: '甘肃省',\n    code: 620000,\n    value: 8246.07\n  }, {\n    name: '安徽省',\n    code: 340000,\n    value: 30006.82\n  }, {\n    name: '香港特别行政区',\n    code: 810000,\n    value: 0\n  }, {\n    name: '广东省',\n    code: 440000,\n    value: 97277.77\n  }, {\n    name: '河南省',\n    code: 410000,\n    value: 48055.86\n  }, {\n    name: '湖南省',\n    code: 430000,\n    value: 36425.78\n  }, {\n    name: '江西省',\n    code: 360000,\n    value: 21984.78\n  }, {\n    name: '四川省',\n    code: 510000,\n    value: 40678.13\n  }, {\n    name: '广西壮族自治区',\n    code: 450000,\n    value: 20353.51\n  }, {\n    name: '江苏省',\n    code: 320000,\n    value: 92595.4\n  }, {\n    name: '澳门特别行政区',\n    code: 820000,\n    value: null\n  }, {\n    name: '浙江省',\n    code: 330000,\n    value: 56197.15\n  }, {\n    name: '山东省',\n    code: 370000,\n    value: 76469.67\n  }, {\n    name: '青海省',\n    code: 630000,\n    value: 2865.23\n  }, {\n    name: '重庆市',\n    code: 500000,\n    value: 20363.19\n  }, {\n    name: '福建省',\n    code: 350000,\n    value: 35804.04\n  }, {\n    name: '湖北省',\n    code: 420000,\n    value: 39366.55\n  }, {\n    name: '西藏自治区',\n    code: 540000,\n    value: 1477.63\n  }, {\n    name: '台湾省',\n    code: 710000,\n    value: null\n  }];\n  new _l7plot.Choropleth('container', {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n      center: [120.19382669582967, 30.258134],\n      zoom: 3,\n      pitch: 0\n    },\n    source: {\n      data: ProvinceData,\n      joinBy: {\n        sourceField: 'code',\n        geoField: 'adcode'\n      }\n    },\n    viewLevel: {\n      level: 'country',\n      adcode: 100000\n    },\n    autoFit: true,\n    color: {\n      field: 'value',\n      value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n      scale: {\n        type: 'quantile'\n      }\n    },\n    style: {\n      opacity: 1,\n      stroke: '#ccc',\n      lineWidth: 0.6,\n      lineOpacity: 1\n    },\n    label: {\n      visible: true,\n      field: 'name',\n      style: {\n        fill: '#000',\n        opacity: 0.8,\n        fontSize: 10,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: false,\n        padding: [5, 5]\n      }\n    },\n    state: {\n      active: {\n        stroke: 'black',\n        lineWidth: 1\n      }\n    },\n    tooltip: {\n      items: ['name', 'adcode', 'value']\n    },\n    zoom: {\n      position: 'bottomright'\n    },\n    legend: {\n      position: 'bottomleft'\n    }\n  });\n});"},{"relativePath":"choropleth/administrative/demo/china-city.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/china-city.ts","order":2,"filename":"china-city.ts","title":{"zh":"中国市级地图","en":"China Citys Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/GN35RftkmZ/c53bc5ab-189f-42a2-9288-7b34f616f18d.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'city')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n        granularity: 'city',\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.chinaCity = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'city';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'country',\n        adcode: 100000,\n        granularity: 'city'\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});"},{"relativePath":"choropleth/administrative/demo/zhejiang-province.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/zhejiang-province.ts","order":3,"filename":"zhejiang-province.ts","title":{"zh":"浙江省地图","en":"Zhejiang Province Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/tX2zfzui76/821b3d1d-421c-4f09-a44e-53422db302f6.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level, parent }) => level === 'city' && parent === 330000)\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000,\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      chinaBorder: {\n        // 国界\n        national: { color: '#ccc', width: 1, opacity: 1 },\n        // 争议\n        dispute: { color: '#ccc', width: 1, opacity: 0.8, dashArray: [2, 2] },\n        // 海洋\n        coast: { color: '#ccc', width: 0.7, opacity: 0.8 },\n        // 港澳\n        hkm: { color: 'gray', width: 0.7, opacity: 0.8 },\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.zhejiangProvince = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level,\n          parent = _ref.parent;\n      return level === 'city' && parent === 330000;\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      chinaBorder: {\n        // 国界\n        national: {\n          color: '#ccc',\n          width: 1,\n          opacity: 1\n        },\n        // 争议\n        dispute: {\n          color: '#ccc',\n          width: 1,\n          opacity: 0.8,\n          dashArray: [2, 2]\n        },\n        // 海洋\n        coast: {\n          color: '#ccc',\n          width: 0.7,\n          opacity: 0.8\n        },\n        // 港澳\n        hkm: {\n          color: 'gray',\n          width: 0.7,\n          opacity: 0.8\n        }\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});"},{"relativePath":"choropleth/administrative/demo/zhejiang-province-district.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/zhejiang-province-district.ts","order":4,"filename":"zhejiang-province-district.ts","title":{"zh":"浙江省县级地图","en":"Zhejiang District Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/YQU0%24nl0gh/c9a9a70d-8abc-42f6-8795-856646346326.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level }) => level === 'district')\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000,\n        granularity: 'district',\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.zhejiangProvinceDistrict = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level;\n      return level === 'district';\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'province',\n        adcode: 330000,\n        granularity: 'district'\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});"},{"relativePath":"choropleth/administrative/demo/hangzhou-city.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/hangzhou-city.ts","order":5,"filename":"hangzhou-city.ts","title":{"zh":"杭州市地图","en":"Hangzhou City Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/kagsfItG%26g/49861247-bc88-4d64-b5b1-0913c8ff55f8.png","source":"import { Choropleth } from '@antv/l7plot';\n\nfetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n  .then((response) => response.json())\n  .then((list) => {\n    const data = list\n      .filter(({ level, parent }) => level === 'district' && parent === 330100)\n      .map((item) => Object.assign({}, item, { value: Math.random() * 5000 }));\n    new Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0,\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode',\n        },\n      },\n      viewLevel: {\n        level: 'city',\n        adcode: 330100,\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: { type: 'quantize' },\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1,\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5],\n        },\n      },\n      state: {\n        active: { stroke: 'black', lineWidth: 1 },\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value'],\n      },\n      zoom: {\n        position: 'bottomright',\n      },\n      legend: {\n        position: 'bottomleft',\n      },\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.hangzhouCity = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n    return response.json();\n  }).then(function (list) {\n    var data = list.filter(function (_ref) {\n      var level = _ref.level,\n          parent = _ref.parent;\n      return level === 'district' && parent === 330100;\n    }).map(function (item) {\n      return Object.assign({}, item, {\n        value: Math.random() * 5000\n      });\n    });\n    new _l7plot.Choropleth('container', {\n      map: {\n        type: 'mapbox',\n        style: 'blank',\n        center: [120.19382669582967, 30.258134],\n        zoom: 3,\n        pitch: 0\n      },\n      source: {\n        data: data,\n        joinBy: {\n          sourceField: 'adcode',\n          geoField: 'adcode'\n        }\n      },\n      viewLevel: {\n        level: 'city',\n        adcode: 330100\n      },\n      autoFit: true,\n      color: {\n        field: 'value',\n        value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n        scale: {\n          type: 'quantize'\n        }\n      },\n      style: {\n        opacity: 1,\n        stroke: '#ccc',\n        lineWidth: 0.6,\n        lineOpacity: 1\n      },\n      label: {\n        visible: true,\n        field: 'name',\n        style: {\n          fill: '#000',\n          opacity: 0.8,\n          fontSize: 10,\n          stroke: '#fff',\n          strokeWidth: 1.5,\n          textAllowOverlap: false,\n          padding: [5, 5]\n        }\n      },\n      state: {\n        active: {\n          stroke: 'black',\n          lineWidth: 1\n        }\n      },\n      tooltip: {\n        items: ['name', 'adcode', 'value']\n      },\n      zoom: {\n        position: 'bottomright'\n      },\n      legend: {\n        position: 'bottomleft'\n      }\n    });\n  });\n});"},{"relativePath":"choropleth/administrative/demo/xihu-district.ts","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/xihu-district.ts","order":6,"filename":"xihu-district.ts","title":{"zh":"西湖区地图","en":"Xihu District Map"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/04xm5U4yvt/828e6055-f005-4dba-8936-aaf451487db9.png","source":"import { Choropleth } from '@antv/l7plot';\n\nnew Choropleth('container', {\n  map: {\n    type: 'mapbox',\n    style: 'blank',\n    center: [120.19382669582967, 30.258134],\n    zoom: 3,\n    pitch: 0,\n  },\n  source: {\n    data: [{ adcode: 330106, value: 200 }],\n    joinBy: {\n      sourceField: 'adcode',\n      geoField: 'adcode',\n    },\n  },\n  viewLevel: {\n    level: 'district',\n    adcode: 330106,\n  },\n  autoFit: true,\n  color: {\n    field: 'value',\n    value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n    scale: { type: 'quantize' },\n  },\n  style: {\n    opacity: 1,\n    stroke: '#ccc',\n    lineWidth: 0.6,\n    lineOpacity: 1,\n  },\n  label: {\n    visible: true,\n    field: 'name',\n    style: {\n      fill: '#000',\n      opacity: 0.8,\n      fontSize: 10,\n      stroke: '#fff',\n      strokeWidth: 1.5,\n      textAllowOverlap: false,\n      padding: [5, 5],\n    },\n  },\n  state: {\n    active: { stroke: 'black', lineWidth: 1 },\n  },\n  tooltip: {\n    items: ['name', 'adcode', 'value'],\n  },\n  zoom: {\n    position: 'bottomright',\n  },\n  legend: {\n    position: 'bottomleft',\n  },\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.l7plot);\n    global.xihuDistrict = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_l7plot) {\n  \"use strict\";\n\n  new _l7plot.Choropleth('container', {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n      center: [120.19382669582967, 30.258134],\n      zoom: 3,\n      pitch: 0\n    },\n    source: {\n      data: [{\n        adcode: 330106,\n        value: 200\n      }],\n      joinBy: {\n        sourceField: 'adcode',\n        geoField: 'adcode'\n      }\n    },\n    viewLevel: {\n      level: 'district',\n      adcode: 330106\n    },\n    autoFit: true,\n    color: {\n      field: 'value',\n      value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n      scale: {\n        type: 'quantize'\n      }\n    },\n    style: {\n      opacity: 1,\n      stroke: '#ccc',\n      lineWidth: 0.6,\n      lineOpacity: 1\n    },\n    label: {\n      visible: true,\n      field: 'name',\n      style: {\n        fill: '#000',\n        opacity: 0.8,\n        fontSize: 10,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: false,\n        padding: [5, 5]\n      }\n    },\n    state: {\n      active: {\n        stroke: 'black',\n        lineWidth: 1\n      }\n    },\n    tooltip: {\n      items: ['name', 'adcode', 'value']\n    },\n    zoom: {\n      position: 'bottomright'\n    },\n    legend: {\n      position: 'bottomleft'\n    }\n  });\n});"},{"relativePath":"choropleth/administrative/demo/administrative-switch.tsx","absolutePath":"/home/runner/work/L7Plot/L7Plot/website/examples/choropleth/administrative/demo/administrative-switch.tsx","order":7,"filename":"administrative-switch.tsx","title":{"zh":"行政区域切换","en":"Administrative Switch"},"screenshot":"https://gw.alipayobjects.com/zos/antfincdn/QjOk7yyaCP/f56f18d5-0397-4ca0-85f0-9f1458562785.png","source":"import React, { useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Cascader } from 'antd';\nimport { Choropleth } from '@antv/l7plot';\n\nfunction AdministrativeSwitch() {\n  const administrativeList = useRef([]);\n  const [administrativeTree, setAdministrativeTree] = useState([]);\n  const map = useRef<Choropleth>();\n\n  const getRandomNumber = (min = 10, max = 2000) => {\n    return Math.random() * (max - min) + min;\n  };\n\n  useEffect(() => {\n    fetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-tree.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        const china = data.filter(({ adcode }) => adcode === 100000);\n        setAdministrativeTree(china);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(`https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json`)\n      .then((response) => response.json())\n      .then((list) => {\n        administrativeList.current = list;\n        const data = list\n          .filter(({ level }) => level === 'province')\n          .map((item) => Object.assign({}, item, { value: getRandomNumber() }));\n\n        const chinaMap = new Choropleth('mapContainer', {\n          map: {\n            type: 'mapbox',\n            style: 'blank',\n            center: [120.19382669582967, 30.258134],\n            zoom: 3,\n            pitch: 0,\n          },\n          source: {\n            data: data,\n            joinBy: {\n              sourceField: 'adcode',\n              geoField: 'adcode',\n            },\n          },\n          viewLevel: {\n            level: 'country',\n            adcode: '100000',\n          },\n          autoFit: true,\n          color: {\n            field: 'value',\n            value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n            scale: { type: 'quantize' },\n          },\n          style: {\n            opacity: 1,\n            stroke: '#ccc',\n            lineWidth: 0.6,\n            lineOpacity: 1,\n          },\n          chinaBorder: {\n            // 国界\n            national: { color: '#ccc', width: 1, opacity: 1 },\n            // 争议\n            dispute: { color: '#ccc', width: 1, opacity: 0.8, dashArray: [2, 2] },\n            // 海洋\n            coast: { color: '#ccc', width: 0.7, opacity: 0.8 },\n            // 港澳\n            hkm: { color: 'gray', width: 0.7, opacity: 0.8 },\n          },\n          label: {\n            visible: true,\n            field: 'name',\n            style: {\n              fill: '#000',\n              opacity: 0.8,\n              fontSize: 10,\n              stroke: '#fff',\n              strokeWidth: 1.5,\n              textAllowOverlap: false,\n              padding: [5, 5],\n            },\n          },\n          state: {\n            active: { stroke: 'black', lineWidth: 1 },\n          },\n          tooltip: {\n            items: ['name', 'adcode', 'value'],\n          },\n          zoom: {\n            position: 'bottomright',\n          },\n          legend: {\n            position: 'bottomleft',\n          },\n        });\n\n        map.current = chinaMap;\n      });\n\n    return () => map.current?.destroy();\n  }, []);\n\n  const onCascaderChange = (value, selectedOptions) => {\n    const currentSelected = selectedOptions[selectedOptions.length - 1];\n    const { adcode, level, children } = currentSelected;\n    if (map.current) {\n      const data = children\n        ? children.map((item) => ({ adcode: item.adcode, value: getRandomNumber() }))\n        : [{ adcode, value: getRandomNumber() }];\n      map.current.changeView({ adcode, level }, { source: { data } });\n    }\n  };\n\n  return (\n    <>\n      <div\n        id=\"mapContainer\"\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n      />\n      {administrativeTree.length && (\n        <Cascader\n          style={{\n            width: 300,\n            zIndex: 2,\n            position: 'absolute',\n            right: '10px',\n            top: '10px',\n          }}\n          changeOnSelect\n          allowClear={false}\n          fieldNames={{ label: 'name', value: 'adcode', children: 'children' }}\n          defaultValue={[100000]}\n          options={administrativeTree}\n          onChange={onCascaderChange}\n        />\n      )}\n    </>\n  );\n}\n\nReactDOM.render(<AdministrativeSwitch />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"antd\", \"@antv/l7plot\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"antd\"), require(\"@antv/l7plot\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.antd, global.l7plot);\n    global.administrativeSwitch = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _antd, _l7plot) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function AdministrativeSwitch() {\n    var administrativeList = (0, _react.useRef)([]);\n\n    var _useState = (0, _react.useState)([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        administrativeTree = _useState2[0],\n        setAdministrativeTree = _useState2[1];\n\n    var map = (0, _react.useRef)();\n\n    var getRandomNumber = function getRandomNumber() {\n      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n      return Math.random() * (max - min) + min;\n    };\n\n    (0, _react.useEffect)(function () {\n      fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-tree.json\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var china = data.filter(function (_ref) {\n          var adcode = _ref.adcode;\n          return adcode === 100000;\n        });\n        setAdministrativeTree(china);\n      });\n    }, []);\n    (0, _react.useEffect)(function () {\n      fetch(\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\").then(function (response) {\n        return response.json();\n      }).then(function (list) {\n        administrativeList.current = list;\n        var data = list.filter(function (_ref2) {\n          var level = _ref2.level;\n          return level === 'province';\n        }).map(function (item) {\n          return Object.assign({}, item, {\n            value: getRandomNumber()\n          });\n        });\n        var chinaMap = new _l7plot.Choropleth('mapContainer', {\n          map: {\n            type: 'mapbox',\n            style: 'blank',\n            center: [120.19382669582967, 30.258134],\n            zoom: 3,\n            pitch: 0\n          },\n          source: {\n            data: data,\n            joinBy: {\n              sourceField: 'adcode',\n              geoField: 'adcode'\n            }\n          },\n          viewLevel: {\n            level: 'country',\n            adcode: '100000'\n          },\n          autoFit: true,\n          color: {\n            field: 'value',\n            value: ['#B8E1FF', '#7DAAFF', '#3D76DD', '#0047A5', '#001D70'],\n            scale: {\n              type: 'quantize'\n            }\n          },\n          style: {\n            opacity: 1,\n            stroke: '#ccc',\n            lineWidth: 0.6,\n            lineOpacity: 1\n          },\n          chinaBorder: {\n            // 国界\n            national: {\n              color: '#ccc',\n              width: 1,\n              opacity: 1\n            },\n            // 争议\n            dispute: {\n              color: '#ccc',\n              width: 1,\n              opacity: 0.8,\n              dashArray: [2, 2]\n            },\n            // 海洋\n            coast: {\n              color: '#ccc',\n              width: 0.7,\n              opacity: 0.8\n            },\n            // 港澳\n            hkm: {\n              color: 'gray',\n              width: 0.7,\n              opacity: 0.8\n            }\n          },\n          label: {\n            visible: true,\n            field: 'name',\n            style: {\n              fill: '#000',\n              opacity: 0.8,\n              fontSize: 10,\n              stroke: '#fff',\n              strokeWidth: 1.5,\n              textAllowOverlap: false,\n              padding: [5, 5]\n            }\n          },\n          state: {\n            active: {\n              stroke: 'black',\n              lineWidth: 1\n            }\n          },\n          tooltip: {\n            items: ['name', 'adcode', 'value']\n          },\n          zoom: {\n            position: 'bottomright'\n          },\n          legend: {\n            position: 'bottomleft'\n          }\n        });\n        map.current = chinaMap;\n      });\n      return function () {\n        var _map$current;\n\n        return (_map$current = map.current) === null || _map$current === void 0 ? void 0 : _map$current.destroy();\n      };\n    }, []);\n\n    var onCascaderChange = function onCascaderChange(value, selectedOptions) {\n      var currentSelected = selectedOptions[selectedOptions.length - 1];\n      var adcode = currentSelected.adcode,\n          level = currentSelected.level,\n          children = currentSelected.children;\n\n      if (map.current) {\n        var data = children ? children.map(function (item) {\n          return {\n            adcode: item.adcode,\n            value: getRandomNumber()\n          };\n        }) : [{\n          adcode: adcode,\n          value: getRandomNumber()\n        }];\n        map.current.changeView({\n          adcode: adcode,\n          level: level\n        }, {\n          source: {\n            data: data\n          }\n        });\n      }\n    };\n\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"mapContainer\",\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }\n    }), administrativeTree.length && /*#__PURE__*/_react.default.createElement(_antd.Cascader, {\n      style: {\n        width: 300,\n        zIndex: 2,\n        position: 'absolute',\n        right: '10px',\n        top: '10px'\n      },\n      changeOnSelect: true,\n      allowClear: false,\n      fieldNames: {\n        label: 'name',\n        value: 'adcode',\n        children: 'children'\n      },\n      defaultValue: [100000],\n      options: administrativeTree,\n      onChange: onCascaderChange\n    }));\n  }\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(AdministrativeSwitch, null), document.getElementById('container'));\n});"}],"API":{"node":{"fields":{"slug":"/zh/examples/choropleth/administrative/API"},"frontmatter":{"title":"","order":null},"html":"<p><code class=\"language-text\">Choropleth</code> 继承基类 <a href=\"/zh/docs/api/plot-api\">Plot</a>。</p>\n<h2 id=\"一配置\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E9%85%8D%E7%BD%AE\" aria-label=\"一配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一、配置</h2>\n<p>创建地图实例：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Choropleth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@antv/l7plot'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> choropleth <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Choropleth</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"container\" style=\"position:relative;\"><a href=\"#container\" aria-label=\"container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>container</h3>\n<p><code class=\"language-text\">string|HTMLDivElement</code> required</p>\n<p>地图渲染的 DOM 容器。</p>\n<h3 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>options</h3>\n<p><code class=\"language-text\">ChoroplethOptions</code> required</p>\n<p>行政区域分布图的所有配置项，继承自 <a href=\"/zh/docs/api/plot-api#options\">Plot options</a>。</p>\n<h3 id=\"code-classlanguage-textoptionscodegeoarea\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodegeoarea\" aria-label=\"code classlanguage textoptionscodegeoarea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>geoArea</h3>\n<p><code class=\"language-text\">string|GeoArea</code> required</p>\n<p>行政地理数据地址，geoArea 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>数据地址</td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>type</td>\n<td>数据类型</td>\n<td><code class=\"language-text\">'geojson'｜'topojson'</code></td>\n<td><code class=\"language-text\">'topojson'</code></td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<p>行政地理数据地址默认值为 <code class=\"language-text\">Choropleth.GeoAreaUrl</code>, 不定时以更新其中版本号方式更新数据。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">geoArea</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/choropleth-data'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'topojson'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodesource\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodesource\" aria-label=\"code classlanguage textoptionscodesource permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>source</h3>\n<p><code class=\"language-text\">ChoroplethSourceOptions</code> required</p>\n<p>行政地理数据地址，source 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>业务数据</td>\n<td><code class=\"language-text\">Array</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>joinBy</td>\n<td>地理元数据关联</td>\n<td><code class=\"language-text\">JoinBy</code></td>\n<td></td>\n<td>required</td>\n</tr>\n</tbody>\n</table>\n<p>地理元数据关联，joinBy 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sourceField</td>\n<td>业务元数据地理字段</td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>geoField</td>\n<td>地理数据字段</td>\n<td><code class=\"language-text\">'adcode'｜'name'</code></td>\n<td><code class=\"language-text\">'adcode'</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>geoData</td>\n<td>地理数据，设置则覆盖当前层级的行政地址数据</td>\n<td><code class=\"language-text\">FeatureCollection</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<p>业务数据与地理数据关联主要有以下两种方式。行政名称与编码映射关系详见<a href=\"https://www.yuque.com/antv/qbux5m/wrxc8h#yyIb\" target=\"_self\" rel=\"nofollow\">行政名称表格</a>与<a href=\"https://gw.alipayobjects.com/os/alisis/geo-data-v0.1.2/administrative-data/area-list.json\" target=\"_self\" rel=\"nofollow\">行政名称数据</a>。</p>\n<ol>\n<li>根据行政编码匹配渲染</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cityName</span><span class=\"token operator\">:</span> <span class=\"token string\">'上海市'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">310000</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">joinBy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">sourceField</span><span class=\"token operator\">:</span> <span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">geoField</span><span class=\"token operator\">:</span> <span class=\"token string\">'adcode'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>根据行政名称匹配渲染</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cityName</span><span class=\"token operator\">:</span> <span class=\"token string\">'上海市'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">code</span><span class=\"token operator\">:</span> <span class=\"token number\">310000</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">joinBy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">sourceField</span><span class=\"token operator\">:</span> <span class=\"token string\">'cityName'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">geoField</span><span class=\"token operator\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodeviewlevel\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodeviewlevel\" aria-label=\"code classlanguage textoptionscodeviewlevel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>viewLevel</h3>\n<p><code class=\"language-text\">ViewLevel</code> required</p>\n<p>行政级别及范围配置，ViewLevel 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>level</td>\n<td>行政级别</td>\n<td><code class=\"language-text\">'world'｜'country'｜'province'｜'city'｜'district'</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>adcode</td>\n<td>行政代码/行政名称</td>\n<td><code class=\"language-text\">number｜string</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>granularity</td>\n<td>化行政级别下的粒度</td>\n<td><code class=\"language-text\">'country'｜'province'｜'city'｜'district'</code></td>\n<td>默认取值 level 下一个级别</td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">viewLevel</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> <span class=\"token string\">'country'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">adcode</span><span class=\"token operator\">:</span> <span class=\"token string\">'100000'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">granularity</span><span class=\"token operator\">:</span> <span class=\"token string\">'province'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodecolor\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodecolor\" aria-label=\"code classlanguage textoptionscodecolor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>color</h3>\n<p><code class=\"language-text\">string|object|Function</code> optional default: <code class=\"language-text\">'#5FD3A6'</code></p>\n<p>元素颜色。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-textcolorcodefield\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcolorcodefield\" aria-label=\"code classlanguage textcolorcodefield permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">color.</code>field</h4>\n<p><code class=\"language-text\">string</code> optional</p>\n<p>元素颜色值映射关联字段。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">t</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">n</span><span class=\"token operator\">:</span> <span class=\"token string\">'chengdu'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">field</span><span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-textcolorcodevalue\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcolorcodevalue\" aria-label=\"code classlanguage textcolorcodevalue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">color.</code>value</h4>\n<p><code class=\"language-text\">string|string[]|Function</code> optional</p>\n<p>元素颜色值映射值。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">field</span><span class=\"token operator\">:</span> <span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> t <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> t <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token operator\">?</span> <span class=\"token string\">'red'</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-textcolorcodescale\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcolorcodescale\" aria-label=\"code classlanguage textcolorcodescale permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">color.</code>scale</h4>\n<p><code class=\"language-text\">ScaleConfig</code> optional default: <code class=\"language-text\">{}</code></p>\n<p>关联字段的映射 scale 类型，有以下 scale 类型：</p>\n<ul>\n<li>linear：线性</li>\n<li>power：指数</li>\n<li>log：对数</li>\n<li>quantile：等分位</li>\n<li>quantize：等间距</li>\n<li>cat：枚举</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">field</span><span class=\"token operator\">:</span> <span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#B8E1FF'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#7DAAFF'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#3D76DD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#0047A5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#001D70'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'quantile'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodestyle\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodestyle\" aria-label=\"code classlanguage textoptionscodestyle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>style</h3>\n<p><code class=\"language-text\">AreaLayerStyle</code> optional</p>\n<p>区域样式，AreaLayerStyle 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>opacity</td>\n<td>填充透明度</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">1</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>fillBottomColor</td>\n<td>填充兜底颜色，用于颜色值映值不存在时</td>\n<td><code class=\"language-text\">false｜string</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>stroke</td>\n<td>描边颜色</td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">'#2f54eb'</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>lineWidth</td>\n<td>描边的宽度</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">1.5</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>lineOpacity</td>\n<td>描边透明度</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">0.8</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>lineType</td>\n<td>描边线类型，支持实线与虚线</td>\n<td><code class=\"language-text\">‘solid’｜'dash'</code></td>\n<td><code class=\"language-text\">‘solid’</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>lineDash</td>\n<td>描边的虚线间隔</td>\n<td><code class=\"language-text\">[number, number]</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>lineDash: 虚线间隔，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为 <code class=\"language-text\">[0,0]</code> 的效果为没有虚线。</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stroke</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">lineWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodestate\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodestate\" aria-label=\"code classlanguage textoptionscodestate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>state</h3>\n<p><code class=\"language-text\">object</code> optional</p>\n<p>区域交互反馈效果。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">stroke</span><span class=\"token operator\">:</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineOpacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">select</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-textstatecodeactive\" style=\"position:relative;\"><a href=\"#code-classlanguage-textstatecodeactive\" aria-label=\"code classlanguage textstatecodeactive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">state.</code>active</h4>\n<p><code class=\"language-text\">boolean｜AreaLayerActiveOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>AreaLayerActiveOptions 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fill</td>\n<td>填充颜色</td>\n<td><code class=\"language-text\">false｜string</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>stroke</td>\n<td>描边颜色</td>\n<td><code class=\"language-text\">false｜string</code></td>\n<td><code class=\"language-text\">'#2f54eb'</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>lineWidth</td>\n<td>描边的宽度</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">1.5</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>lineOpacity</td>\n<td>描边透明度</td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">0.8</code></td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<p>标签 mousehover 高亮效果，开启 mousehover 元素高亮效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>开启 mousehover 元素高亮效果并自定义设置高亮颜色：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">fill</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">stroke</span><span class=\"token operator\">:</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineOpacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-textstatecodeselect\" style=\"position:relative;\"><a href=\"#code-classlanguage-textstatecodeselect\" aria-label=\"code classlanguage textstatecodeselect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">state.</code>select</h4>\n<p><code class=\"language-text\">boolean｜AreaLayerActiveOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>元素 mouseclick 选中高亮效果，开启 mouseclick 元素高亮效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">select</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>开启 mousehover 元素高亮效果并自定义设置高亮颜色：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">select</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">fill</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">stroke</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">lineOpacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodechinaborder\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodechinaborder\" aria-label=\"code classlanguage textoptionscodechinaborder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>chinaBorder</h3>\n<p><code class=\"language-text\">boolean｜ChinaBoundaryStyle</code> optional default: <code class=\"language-text\">ture</code></p>\n<p>是否显示中国国界线，国界线样式 ChinaBoundaryStyle 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>national</td>\n<td>国界</td>\n<td><code class=\"language-text\">LinesLayerStyleOptions</code></td>\n<td><code class=\"language-text\">{ color: 'red', width: 1, opacity: 1 }</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>dispute</td>\n<td>争议</td>\n<td><code class=\"language-text\">LinesLayerStyleOptions</code></td>\n<td><code class=\"language-text\">{ color: 'red', width: 1, opacity: 1, dashArray: [2, 4] }</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>coast</td>\n<td>海洋</td>\n<td><code class=\"language-text\">LinesLayerStyleOptions</code></td>\n<td><code class=\"language-text\">{ color: 'blue', width: 0.7, opacity: 0.8 }</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>hkm</td>\n<td>港澳</td>\n<td><code class=\"language-text\">LinesLayerStyleOptions</code></td>\n<td><code class=\"language-text\">{ color: 'gray', width: 0.7, opacity: 0.8, dashArray: [2, 4] }</code></td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"code-classlanguage-textoptionscodedrill\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodedrill\" aria-label=\"code classlanguage textoptionscodedrill permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>drill</h3>\n<p><code class=\"language-text\">Drill</code> optional</p>\n<p>开启数据钻取功能，Drill 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enabled</td>\n<td>是否启用钻取功能</td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">ture</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>steps</td>\n<td>钻取维度顺序</td>\n<td><code class=\"language-text\">DrillStep[]｜DrillStep['level'][]</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>triggerUp</td>\n<td>上卷钻取的触发事件</td>\n<td><code class=\"language-text\">'unclick'｜'undblclick'｜'uncontextmenu'</code></td>\n<td><code class=\"language-text\">unclick</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>triggerDown</td>\n<td>下钻钻取的触发事件</td>\n<td><code class=\"language-text\">'click'｜'dblclick'｜'contextmenu'</code></td>\n<td><code class=\"language-text\">click</code></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>onUp</td>\n<td>上卷事件回调</td>\n<td><code class=\"language-text\">(from: ViewLevel, to: ViewLevel, callback: (config?: DrillStepConfig) => void) => void</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>onDown</td>\n<td>上卷事件回调</td>\n<td><code class=\"language-text\">(from: ViewLevel, to: ViewLevel &amp; { properties: Record&lt;string, any> }, callback: (config?: DrillStepConfig) => void) => void</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<p>钻取维度 DrillStep 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>level</td>\n<td>初始化行政级别</td>\n<td><code class=\"language-text\">'country'｜'province'｜'city'｜'district'</code></td>\n<td></td>\n<td>required</td>\n</tr>\n<tr>\n<td>granularity</td>\n<td>化行政级别下的粒度</td>\n<td><code class=\"language-text\">'province'｜'city'｜'district'</code></td>\n<td>默认取值 level 下一个级别</td>\n<td>optional</td>\n</tr>\n<tr>\n<td>source</td>\n<td>当前行政级别下的数据</td>\n<td><code class=\"language-text\">ChoroplethSourceOptions</code></td>\n<td>默认取上一个级别的配置</td>\n<td>optional</td>\n</tr>\n<tr>\n<td>color</td>\n<td>当前行政级别下的颜色映射</td>\n<td><code class=\"language-text\">string｜object｜Function</code></td>\n<td>默认取上一个级别的配置</td>\n<td>optional</td>\n</tr>\n<tr>\n<td>style</td>\n<td>当前行政级别下的区域样式</td>\n<td><code class=\"language-text\">object</code></td>\n<td>默认取上一个级别的配置</td>\n<td>optional</td>\n</tr>\n<tr>\n<td>state</td>\n<td>当前行政级别下的区域交互反馈效果</td>\n<td><code class=\"language-text\">object</code></td>\n<td>默认取上一个级别的配置</td>\n<td>optional</td>\n</tr>\n<tr>\n<td>label</td>\n<td>当前行政级别下的数据标签</td>\n<td><code class=\"language-text\">'province'｜'city'｜'district'</code></td>\n<td>默认取上一个级别的配置</td>\n<td>optional</td>\n</tr>\n<tr>\n<td>tooltip</td>\n<td>当前行政级别下的悬浮提示</td>\n<td><code class=\"language-text\">'province'｜'city'｜'district'</code></td>\n<td>默认取上一个级别的配置</td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<p>DrillStepConfig 配置如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n<th>类型</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>source</td>\n<td>当前行政级别下的数据</td>\n<td><code class=\"language-text\">ChoroplethSourceOptions</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>color</td>\n<td>当前行政级别下的颜色映射</td>\n<td><code class=\"language-text\">string｜object｜Function</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>style</td>\n<td>当前行政级别下的区域样式</td>\n<td><code class=\"language-text\">object</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>state</td>\n<td>当前行政级别下的区域交互反馈效果</td>\n<td><code class=\"language-text\">object</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>label</td>\n<td>当前行政级别下的数据标签</td>\n<td><code class=\"language-text\">'province'｜'city'｜'district'</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n<tr>\n<td>tooltip</td>\n<td>当前行政级别下的悬浮提示</td>\n<td><code class=\"language-text\">'province'｜'city'｜'district'</code></td>\n<td></td>\n<td>optional</td>\n</tr>\n</tbody>\n</table>\n<p>下钻事件回调：</p>\n<blockquote>\n<p>适用于异步请求下钻数据</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">drill</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">steps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'province'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'city'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'district'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onDown</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> level<span class=\"token punctuation\">,</span> adcode<span class=\"token punctuation\">,</span> granularity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> to\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">joinBy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">sourceField</span><span class=\"token operator\">:</span> <span class=\"token string\">'code'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onUp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>下钻事件回调拦截：</p>\n<blockquote>\n<p>适用于下钻数据权限判断</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">drill</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">steps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'province'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'city'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'district'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onDown</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">.</span>adcode <span class=\"token operator\">!==</span> <span class=\"token number\">330000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onUp</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textoptionscodelabel\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodelabel\" aria-label=\"code classlanguage textoptionscodelabel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>label</h3>\n<p><code class=\"language-text\">false｜LabelOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>地图数据标签配置，详见 <a href=\"/zh/docs/api/components/label\">Label</a>。</p>\n<h3 id=\"code-classlanguage-textoptionscodetooltip\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodetooltip\" aria-label=\"code classlanguage textoptionscodetooltip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>tooltip</h3>\n<p><code class=\"language-text\">false｜TooltipOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>数据悬浮提示组件配置，详见 <a href=\"/zh/docs/api/components/tooltip\">Tooltip</a>。</p>\n<h3 id=\"code-classlanguage-textoptionscodelegend\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodelegend\" aria-label=\"code classlanguage textoptionscodelegend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>legend</h3>\n<p><code class=\"language-text\">false｜LegendOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>地图图例组件配置，详见 <a href=\"/zh/docs/api/components/legend\">Legend</a>。</p>\n<h3 id=\"code-classlanguage-textoptionscodezoom\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodezoom\" aria-label=\"code classlanguage textoptionscodezoom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>zoom</h3>\n<p><code class=\"language-text\">false｜ZoomControlOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>地图放大缩小控件，详见 <a href=\"/zh/docs/api/components/zoom\">Zoom</a>。</p>\n<h3 id=\"code-classlanguage-textoptionscodescale\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodescale\" aria-label=\"code classlanguage textoptionscodescale permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>scale</h3>\n<p><code class=\"language-text\">false｜ScaleControlOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>地图比例尺控件，详见 <a href=\"/zh/docs/api/components/scale\">Scale</a>。</p>\n<h3 id=\"code-classlanguage-textoptionscodelayermenu\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoptionscodelayermenu\" aria-label=\"code classlanguage textoptionscodelayermenu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">options.</code>layerMenu</h3>\n<p><code class=\"language-text\">false｜LayerMenuControlOptions</code> optional default: <code class=\"language-text\">false</code></p>\n<p>地图图层列表控件，详见 <a href=\"/zh/docs/api/components/layerMenu\">LayerMenu</a>。</p>\n<h2 id=\"二属性\" style=\"position:relative;\"><a href=\"#%E4%BA%8C%E5%B1%9E%E6%80%A7\" aria-label=\"二属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二、属性</h2>\n<p>继承 <a href=\"/zh/docs/api/plot-api#%E4%BA%8C%E3%80%81%E5%B1%9E%E6%80%A7\">Plot 属性</a>。</p>\n<h3 id=\"fillarealayer\" style=\"position:relative;\"><a href=\"#fillarealayer\" aria-label=\"fillarealayer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fillAreaLayer</h3>\n<p><code class=\"language-text\">AreaLayer</code></p>\n<p>填充面图层实例。</p>\n<h3 id=\"labellayer\" style=\"position:relative;\"><a href=\"#labellayer\" aria-label=\"labellayer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>labelLayer</h3>\n<p><code class=\"language-text\">undefined|TextLayer</code></p>\n<p>数据标签图层实例。</p>\n<h2 id=\"三方法\" style=\"position:relative;\"><a href=\"#%E4%B8%89%E6%96%B9%E6%B3%95\" aria-label=\"三方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三、方法</h2>\n<p>继承 <a href=\"/zh/docs/api/plot-api#%E4%B8%89%E3%80%81%E6%96%B9%E6%B3%95\">Plot 方法</a>。</p>\n<h3 id=\"changeview\" style=\"position:relative;\"><a href=\"#changeview\" aria-label=\"changeview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>changeView</h3>\n<p>更新显示区域，未开启<a href=\"/zh/docs/api/plots/choropleth#%60options.%60drill\">钻取功能</a>时，方法控制地图显示区域。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">plot<span class=\"token punctuation\">.</span><span class=\"token function\">changeView</span><span class=\"token punctuation\">(</span>view<span class=\"token operator\">:</span> ViewLevel<span class=\"token punctuation\">,</span> config<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DrillStepConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"drilldown\" style=\"position:relative;\"><a href=\"#drilldown\" aria-label=\"drilldown permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>drillDown</h3>\n<p>向下钻取方法，配合开启<a href=\"/zh/docs/api/plots/choropleth#%60options.%60drill\">钻取功能</a>时，方法控制地图下钻。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">plot<span class=\"token punctuation\">.</span><span class=\"token function\">drillDown</span><span class=\"token punctuation\">(</span>view<span class=\"token operator\">:</span> ViewLevel<span class=\"token punctuation\">,</span> config<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DrillStepConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"drillup\" style=\"position:relative;\"><a href=\"#drillup\" aria-label=\"drillup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>drillUp</h3>\n<p>向上钻取方法，配合开启<a href=\"/zh/docs/api/plots/choropleth#%60options.%60drill\">钻取功能</a>时，方法控制地图上钻。上钻行政级别 <code class=\"language-text\">level</code> 可选，默认上钻到当前行政级别的上一层，也可以回到某一行政级别或最高层级别。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">plot<span class=\"token punctuation\">.</span><span class=\"token function\">drillUp</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">?</span><span class=\"token operator\">:</span> DrillStepConfig<span class=\"token punctuation\">,</span> level<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">'world'｜'country'｜'province'｜'city'</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"getcurrentdrillsteps\" style=\"position:relative;\"><a href=\"#getcurrentdrillsteps\" aria-label=\"getcurrentdrillsteps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getCurrentDrillSteps</h3>\n<p>获取当前已钻取层级数据，配合开启<a href=\"/zh/docs/api/plots/choropleth#%60options.%60drill\">钻取功能</a>时使用。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">plot<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentDrillSteps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ViewLevel<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"四事件\" style=\"position:relative;\"><a href=\"#%E5%9B%9B%E4%BA%8B%E4%BB%B6\" aria-label=\"四事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>四、事件</h2>\n<p>继承 <a href=\"/zh/docs/api/plot-api#%E5%9B%9B%E3%80%81%E4%BA%8B%E4%BB%B6\">Plot 方法</a>。</p>\n<h3 id=\"图层事件\" style=\"position:relative;\"><a href=\"#%E5%9B%BE%E5%B1%82%E4%BA%8B%E4%BB%B6\" aria-label=\"图层事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>图层事件</h3>\n<p>内置图层名称分别为：</p>\n<ul>\n<li>fillAreaLayer</li>\n<li>labelLayer</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">choropleth<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fillAreaLayer:click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> MouseEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"钻取事件\" style=\"position:relative;\"><a href=\"#%E9%92%BB%E5%8F%96%E4%BA%8B%E4%BB%B6\" aria-label=\"钻取事件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>钻取事件</h3>\n<h4 id=\"下钻\" style=\"position:relative;\"><a href=\"#%E4%B8%8B%E9%92%BB\" aria-label=\"下钻 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>下钻</h4>\n<p>下钻完成后触发。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">choropleth<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drilldown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">downParams</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> ViewLevel<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> ViewLevel <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> any<span class=\"token operator\">></span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"上卷\" style=\"position:relative;\"><a href=\"#%E4%B8%8A%E5%8D%B7\" aria-label=\"上卷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>上卷</h4>\n<p>上卷完成后触发。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">choropleth<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'drillup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">upParams</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> ViewLevel<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> ViewLevel <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},"description":""}}},"staticQueryHashes":["192318182","1976131296","3000541721","3000541721","3948495422"]}